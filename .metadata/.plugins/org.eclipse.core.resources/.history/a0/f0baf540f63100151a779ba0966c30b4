/**
 * This class is generated by jOOQ
 */
package org.gradle.tim1;


import javax.annotation.Generated;

import org.gradle.tim1.tables.Article;
import org.gradle.tim1.tables.Basket;
import org.gradle.tim1.tables.Category;
import org.gradle.tim1.tables.Comment;
import org.gradle.tim1.tables.Order;
import org.gradle.tim1.tables.Post;
import org.gradle.tim1.tables.Subcategory;
import org.gradle.tim1.tables.Topic;
import org.gradle.tim1.tables.User;
import org.gradle.tim1.tables.records.ArticleRecord;
import org.gradle.tim1.tables.records.BasketRecord;
import org.gradle.tim1.tables.records.CategoryRecord;
import org.gradle.tim1.tables.records.CommentRecord;
import org.gradle.tim1.tables.records.OrderRecord;
import org.gradle.tim1.tables.records.PostRecord;
import org.gradle.tim1.tables.records.SubcategoryRecord;
import org.gradle.tim1.tables.records.TopicRecord;
import org.gradle.tim1.tables.records.UserRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>tim1</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<ArticleRecord, Integer> IDENTITY_ARTICLE = Identities0.IDENTITY_ARTICLE;
	public static final Identity<BasketRecord, Integer> IDENTITY_BASKET = Identities0.IDENTITY_BASKET;
	public static final Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = Identities0.IDENTITY_CATEGORY;
	public static final Identity<CommentRecord, Integer> IDENTITY_COMMENT = Identities0.IDENTITY_COMMENT;
	public static final Identity<OrderRecord, Integer> IDENTITY_ORDER = Identities0.IDENTITY_ORDER;
	public static final Identity<PostRecord, Integer> IDENTITY_POST = Identities0.IDENTITY_POST;
	public static final Identity<SubcategoryRecord, Integer> IDENTITY_SUBCATEGORY = Identities0.IDENTITY_SUBCATEGORY;
	public static final Identity<TopicRecord, Integer> IDENTITY_TOPIC = Identities0.IDENTITY_TOPIC;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<ArticleRecord> KEY_ARTICLE_PRIMARY = UniqueKeys0.KEY_ARTICLE_PRIMARY;
	public static final UniqueKey<BasketRecord> KEY_BASKET_PRIMARY = UniqueKeys0.KEY_BASKET_PRIMARY;
	public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = UniqueKeys0.KEY_CATEGORY_PRIMARY;
	public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = UniqueKeys0.KEY_COMMENT_PRIMARY;
	public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = UniqueKeys0.KEY_ORDER_PRIMARY;
	public static final UniqueKey<PostRecord> KEY_POST_PRIMARY = UniqueKeys0.KEY_POST_PRIMARY;
	public static final UniqueKey<SubcategoryRecord> KEY_SUBCATEGORY_PRIMARY = UniqueKeys0.KEY_SUBCATEGORY_PRIMARY;
	public static final UniqueKey<TopicRecord> KEY_TOPIC_PRIMARY = UniqueKeys0.KEY_TOPIC_PRIMARY;
	public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<ArticleRecord, CategoryRecord> ARTICLE_IBFK_1 = ForeignKeys0.ARTICLE_IBFK_1;
	public static final ForeignKey<BasketRecord, UserRecord> BASKET_IBFK_1 = ForeignKeys0.BASKET_IBFK_1;
	public static final ForeignKey<CommentRecord, UserRecord> COMMENT_IBFK_3 = ForeignKeys0.COMMENT_IBFK_3;
	public static final ForeignKey<CommentRecord, ArticleRecord> COMMENT_IBFK_2 = ForeignKeys0.COMMENT_IBFK_2;
	public static final ForeignKey<OrderRecord, BasketRecord> ORDER_IBFK_1 = ForeignKeys0.ORDER_IBFK_1;
	public static final ForeignKey<OrderRecord, ArticleRecord> ORDER_IBFK_2 = ForeignKeys0.ORDER_IBFK_2;
	public static final ForeignKey<PostRecord, TopicRecord> POST_IBFK_2 = ForeignKeys0.POST_IBFK_2;
	public static final ForeignKey<PostRecord, UserRecord> POST_IBFK_3 = ForeignKeys0.POST_IBFK_3;
	public static final ForeignKey<SubcategoryRecord, CategoryRecord> SUBCATEGORY_IBFK_1 = ForeignKeys0.SUBCATEGORY_IBFK_1;
	public static final ForeignKey<TopicRecord, UserRecord> TOPIC_IBFK_1 = ForeignKeys0.TOPIC_IBFK_1;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<ArticleRecord, Integer> IDENTITY_ARTICLE = createIdentity(Article.ARTICLE, Article.ARTICLE.IDARTICLE);
		public static Identity<BasketRecord, Integer> IDENTITY_BASKET = createIdentity(Basket.BASKET, Basket.BASKET.IDBASKET);
		public static Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = createIdentity(Category.CATEGORY, Category.CATEGORY.IDCATEGORY);
		public static Identity<CommentRecord, Integer> IDENTITY_COMMENT = createIdentity(Comment.COMMENT, Comment.COMMENT.IDCOMMENT);
		public static Identity<OrderRecord, Integer> IDENTITY_ORDER = createIdentity(Order.ORDER, Order.ORDER.IDORDER);
		public static Identity<PostRecord, Integer> IDENTITY_POST = createIdentity(Post.POST, Post.POST.IDPOST);
		public static Identity<SubcategoryRecord, Integer> IDENTITY_SUBCATEGORY = createIdentity(Subcategory.SUBCATEGORY, Subcategory.SUBCATEGORY.IDSUBCATEGORY);
		public static Identity<TopicRecord, Integer> IDENTITY_TOPIC = createIdentity(Topic.TOPIC, Topic.TOPIC.IDTOPIC);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<ArticleRecord> KEY_ARTICLE_PRIMARY = createUniqueKey(Article.ARTICLE, Article.ARTICLE.IDARTICLE);
		public static final UniqueKey<BasketRecord> KEY_BASKET_PRIMARY = createUniqueKey(Basket.BASKET, Basket.BASKET.IDBASKET);
		public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = createUniqueKey(Category.CATEGORY, Category.CATEGORY.IDCATEGORY);
		public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = createUniqueKey(Comment.COMMENT, Comment.COMMENT.IDCOMMENT);
		public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = createUniqueKey(Order.ORDER, Order.ORDER.IDORDER);
		public static final UniqueKey<PostRecord> KEY_POST_PRIMARY = createUniqueKey(Post.POST, Post.POST.IDPOST);
		public static final UniqueKey<SubcategoryRecord> KEY_SUBCATEGORY_PRIMARY = createUniqueKey(Subcategory.SUBCATEGORY, Subcategory.SUBCATEGORY.IDSUBCATEGORY);
		public static final UniqueKey<TopicRecord> KEY_TOPIC_PRIMARY = createUniqueKey(Topic.TOPIC, Topic.TOPIC.IDTOPIC);
		public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, User.USER.MAIL);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<ArticleRecord, CategoryRecord> ARTICLE_IBFK_1 = createForeignKey(org.gradle.tim1.Keys.KEY_CATEGORY_PRIMARY, Article.ARTICLE, Article.ARTICLE.IDCATEGORY);
		public static final ForeignKey<BasketRecord, UserRecord> BASKET_IBFK_1 = createForeignKey(org.gradle.tim1.Keys.KEY_USER_PRIMARY, Basket.BASKET, Basket.BASKET.MAIL);
		public static final ForeignKey<CommentRecord, UserRecord> COMMENT_IBFK_3 = createForeignKey(org.gradle.tim1.Keys.KEY_USER_PRIMARY, Comment.COMMENT, Comment.COMMENT.MAIL);
		public static final ForeignKey<CommentRecord, ArticleRecord> COMMENT_IBFK_2 = createForeignKey(org.gradle.tim1.Keys.KEY_ARTICLE_PRIMARY, Comment.COMMENT, Comment.COMMENT.IDARTICLE);
		public static final ForeignKey<OrderRecord, BasketRecord> ORDER_IBFK_1 = createForeignKey(org.gradle.tim1.Keys.KEY_BASKET_PRIMARY, Order.ORDER, Order.ORDER.IDBASKET);
		public static final ForeignKey<OrderRecord, ArticleRecord> ORDER_IBFK_2 = createForeignKey(org.gradle.tim1.Keys.KEY_ARTICLE_PRIMARY, Order.ORDER, Order.ORDER.IDARTICLE);
		public static final ForeignKey<PostRecord, TopicRecord> POST_IBFK_2 = createForeignKey(org.gradle.tim1.Keys.KEY_TOPIC_PRIMARY, Post.POST, Post.POST.IDTOPIC);
		public static final ForeignKey<PostRecord, UserRecord> POST_IBFK_3 = createForeignKey(org.gradle.tim1.Keys.KEY_USER_PRIMARY, Post.POST, Post.POST.MAIL);
		public static final ForeignKey<SubcategoryRecord, CategoryRecord> SUBCATEGORY_IBFK_1 = createForeignKey(org.gradle.tim1.Keys.KEY_CATEGORY_PRIMARY, Subcategory.SUBCATEGORY, Subcategory.SUBCATEGORY.IDCATEGORY);
		public static final ForeignKey<TopicRecord, UserRecord> TOPIC_IBFK_1 = createForeignKey(org.gradle.tim1.Keys.KEY_USER_PRIMARY, Topic.TOPIC, Topic.TOPIC.MAIL);
	}
}
