/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.gradle.dnevnik.tables.Ocena;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OcenaRecord extends UpdatableRecordImpl<OcenaRecord> implements Record6<Integer, Integer, Integer, Integer, Date, String> {

	private static final long serialVersionUID = -1275861847;

	/**
	 * Setter for <code>dnevnik.ocena.idOcene</code>.
	 */
	public void setIdocene(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dnevnik.ocena.idOcene</code>.
	 */
	public Integer getIdocene() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>dnevnik.ocena.idUcenika</code>.
	 */
	public void setIducenika(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dnevnik.ocena.idUcenika</code>.
	 */
	public Integer getIducenika() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>dnevnik.ocena.idPredmeta</code>.
	 */
	public void setIdpredmeta(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dnevnik.ocena.idPredmeta</code>.
	 */
	public Integer getIdpredmeta() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>dnevnik.ocena.tipOcene</code>.
	 */
	public void setTipocene(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dnevnik.ocena.tipOcene</code>.
	 */
	public Integer getTipocene() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>dnevnik.ocena.datumUnosa</code>.
	 */
	public void setDatumunosa(Date value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dnevnik.ocena.datumUnosa</code>.
	 */
	public Date getDatumunosa() {
		return (Date) getValue(4);
	}

	/**
	 * Setter for <code>dnevnik.ocena.opis</code>.
	 */
	public void setOpis(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>dnevnik.ocena.opis</code>.
	 */
	public String getOpis() {
		return (String) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, Integer, Integer, Date, String> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, Integer, Integer, Date, String> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Ocena.OCENA.IDOCENE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Ocena.OCENA.IDUCENIKA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Ocena.OCENA.IDPREDMETA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Ocena.OCENA.TIPOCENE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field5() {
		return Ocena.OCENA.DATUMUNOSA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Ocena.OCENA.OPIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdocene();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getIducenika();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getIdpredmeta();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getTipocene();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value5() {
		return getDatumunosa();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getOpis();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OcenaRecord value1(Integer value) {
		setIdocene(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OcenaRecord value2(Integer value) {
		setIducenika(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OcenaRecord value3(Integer value) {
		setIdpredmeta(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OcenaRecord value4(Integer value) {
		setTipocene(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OcenaRecord value5(Date value) {
		setDatumunosa(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OcenaRecord value6(String value) {
		setOpis(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OcenaRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Date value5, String value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OcenaRecord
	 */
	public OcenaRecord() {
		super(Ocena.OCENA);
	}

	/**
	 * Create a detached, initialised OcenaRecord
	 */
	public OcenaRecord(Integer idocene, Integer iducenika, Integer idpredmeta, Integer tipocene, Date datumunosa, String opis) {
		super(Ocena.OCENA);

		setValue(0, idocene);
		setValue(1, iducenika);
		setValue(2, idpredmeta);
		setValue(3, tipocene);
		setValue(4, datumunosa);
		setValue(5, opis);
	}
}
