/**
 * This class is generated by jOOQ
 */
package org.gradle.information_schema.tables.records;


import javax.annotation.Generated;

import org.gradle.information_schema.tables.InnodbLocks;
import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbLocksRecord extends TableRecordImpl<InnodbLocksRecord> implements Record10<String, String, String, String, String, String, ULong, ULong, ULong, String> {

	private static final long serialVersionUID = 8139978;

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_id</code>.
	 */
	public void setLockId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_id</code>.
	 */
	public String getLockId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_trx_id</code>.
	 */
	public void setLockTrxId(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_trx_id</code>.
	 */
	public String getLockTrxId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_mode</code>.
	 */
	public void setLockMode(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_mode</code>.
	 */
	public String getLockMode() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_type</code>.
	 */
	public void setLockType(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_type</code>.
	 */
	public String getLockType() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_table</code>.
	 */
	public void setLockTable(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_table</code>.
	 */
	public String getLockTable() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_index</code>.
	 */
	public void setLockIndex(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_index</code>.
	 */
	public String getLockIndex() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_space</code>.
	 */
	public void setLockSpace(ULong value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_space</code>.
	 */
	public ULong getLockSpace() {
		return (ULong) getValue(6);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_page</code>.
	 */
	public void setLockPage(ULong value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_page</code>.
	 */
	public ULong getLockPage() {
		return (ULong) getValue(7);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_rec</code>.
	 */
	public void setLockRec(ULong value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_rec</code>.
	 */
	public ULong getLockRec() {
		return (ULong) getValue(8);
	}

	/**
	 * Setter for <code>information_schema.INNODB_LOCKS.lock_data</code>.
	 */
	public void setLockData(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_LOCKS.lock_data</code>.
	 */
	public String getLockData() {
		return (String) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<String, String, String, String, String, String, ULong, ULong, ULong, String> fieldsRow() {
		return (Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<String, String, String, String, String, String, ULong, ULong, ULong, String> valuesRow() {
		return (Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return InnodbLocks.INNODB_LOCKS.LOCK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return InnodbLocks.INNODB_LOCKS.LOCK_TRX_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return InnodbLocks.INNODB_LOCKS.LOCK_MODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return InnodbLocks.INNODB_LOCKS.LOCK_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return InnodbLocks.INNODB_LOCKS.LOCK_TABLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return InnodbLocks.INNODB_LOCKS.LOCK_INDEX;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field7() {
		return InnodbLocks.INNODB_LOCKS.LOCK_SPACE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field8() {
		return InnodbLocks.INNODB_LOCKS.LOCK_PAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field9() {
		return InnodbLocks.INNODB_LOCKS.LOCK_REC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return InnodbLocks.INNODB_LOCKS.LOCK_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getLockId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getLockTrxId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLockMode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getLockType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getLockTable();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getLockIndex();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value7() {
		return getLockSpace();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value8() {
		return getLockPage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value9() {
		return getLockRec();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getLockData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value1(String value) {
		setLockId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value2(String value) {
		setLockTrxId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value3(String value) {
		setLockMode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value4(String value) {
		setLockType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value5(String value) {
		setLockTable(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value6(String value) {
		setLockIndex(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value7(ULong value) {
		setLockSpace(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value8(ULong value) {
		setLockPage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value9(ULong value) {
		setLockRec(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord value10(String value) {
		setLockData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbLocksRecord values(String value1, String value2, String value3, String value4, String value5, String value6, ULong value7, ULong value8, ULong value9, String value10) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached InnodbLocksRecord
	 */
	public InnodbLocksRecord() {
		super(InnodbLocks.INNODB_LOCKS);
	}

	/**
	 * Create a detached, initialised InnodbLocksRecord
	 */
	public InnodbLocksRecord(String lockId, String lockTrxId, String lockMode, String lockType, String lockTable, String lockIndex, ULong lockSpace, ULong lockPage, ULong lockRec, String lockData) {
		super(InnodbLocks.INNODB_LOCKS);

		setValue(0, lockId);
		setValue(1, lockTrxId);
		setValue(2, lockMode);
		setValue(3, lockType);
		setValue(4, lockTable);
		setValue(5, lockIndex);
		setValue(6, lockSpace);
		setValue(7, lockPage);
		setValue(8, lockRec);
		setValue(9, lockData);
	}
}
