/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables.records;


import javax.annotation.Generated;

import org.gradle.dnevnik.tables.Predmet;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PredmetRecord extends UpdatableRecordImpl<PredmetRecord> implements Record4<Integer, String, Integer, String> {

	private static final long serialVersionUID = 1603363439;

	/**
	 * Setter for <code>dnevnik.predmet.idPredmeta</code>.
	 */
	public void setIdpredmeta(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dnevnik.predmet.idPredmeta</code>.
	 */
	public Integer getIdpredmeta() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>dnevnik.predmet.naziv</code>.
	 */
	public void setNaziv(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dnevnik.predmet.naziv</code>.
	 */
	public String getNaziv() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>dnevnik.predmet.fondCasova</code>.
	 */
	public void setFondcasova(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dnevnik.predmet.fondCasova</code>.
	 */
	public Integer getFondcasova() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>dnevnik.predmet.opis</code>.
	 */
	public void setOpis(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dnevnik.predmet.opis</code>.
	 */
	public String getOpis() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Integer, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Integer, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Predmet.PREDMET.IDPREDMETA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Predmet.PREDMET.NAZIV;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Predmet.PREDMET.FONDCASOVA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Predmet.PREDMET.OPIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdpredmeta();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getNaziv();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getFondcasova();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getOpis();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PredmetRecord value1(Integer value) {
		setIdpredmeta(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PredmetRecord value2(String value) {
		setNaziv(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PredmetRecord value3(Integer value) {
		setFondcasova(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PredmetRecord value4(String value) {
		setOpis(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PredmetRecord values(Integer value1, String value2, Integer value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PredmetRecord
	 */
	public PredmetRecord() {
		super(Predmet.PREDMET);
	}

	/**
	 * Create a detached, initialised PredmetRecord
	 */
	public PredmetRecord(Integer idpredmeta, String naziv, Integer fondcasova, String opis) {
		super(Predmet.PREDMET);

		setValue(0, idpredmeta);
		setValue(1, naziv);
		setValue(2, fondcasova);
		setValue(3, opis);
	}
}
