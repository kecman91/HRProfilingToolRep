/**
 * This class is generated by jOOQ
 */
package org.gradle.bioskopdb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.bioskopdb.Bioskopdb;
import org.gradle.bioskopdb.Keys;
import org.gradle.bioskopdb.tables.records.ZanrRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Zanr extends TableImpl<ZanrRecord> {

	private static final long serialVersionUID = 664803980;

	/**
	 * The reference instance of <code>bioskopdb.zanr</code>
	 */
	public static final Zanr ZANR = new Zanr();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ZanrRecord> getRecordType() {
		return ZanrRecord.class;
	}

	/**
	 * The column <code>bioskopdb.zanr.idZanr</code>.
	 */
	public final TableField<ZanrRecord, Integer> IDZANR = createField("idZanr", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>bioskopdb.zanr.tip</code>.
	 */
	public final TableField<ZanrRecord, String> TIP = createField("tip", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>bioskopdb.zanr</code> table reference
	 */
	public Zanr() {
		this("zanr", null);
	}

	/**
	 * Create an aliased <code>bioskopdb.zanr</code> table reference
	 */
	public Zanr(String alias) {
		this(alias, ZANR);
	}

	private Zanr(String alias, Table<ZanrRecord> aliased) {
		this(alias, aliased, null);
	}

	private Zanr(String alias, Table<ZanrRecord> aliased, Field<?>[] parameters) {
		super(alias, Bioskopdb.BIOSKOPDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ZanrRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ZANR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ZanrRecord> getPrimaryKey() {
		return Keys.KEY_ZANR_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ZanrRecord>> getKeys() {
		return Arrays.<UniqueKey<ZanrRecord>>asList(Keys.KEY_ZANR_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Zanr as(String alias) {
		return new Zanr(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Zanr rename(String name) {
		return new Zanr(name, null);
	}
}
