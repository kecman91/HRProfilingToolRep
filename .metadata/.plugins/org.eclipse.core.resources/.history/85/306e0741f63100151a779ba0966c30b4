/**
 * This class is generated by jOOQ
 */
package org.gradle.bioskopdb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.bioskopdb.Bioskopdb;
import org.gradle.bioskopdb.Keys;
import org.gradle.bioskopdb.tables.records.ListazanrovaRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Listazanrova extends TableImpl<ListazanrovaRecord> {

	private static final long serialVersionUID = 955782714;

	/**
	 * The reference instance of <code>bioskopdb.listazanrova</code>
	 */
	public static final Listazanrova LISTAZANROVA = new Listazanrova();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ListazanrovaRecord> getRecordType() {
		return ListazanrovaRecord.class;
	}

	/**
	 * The column <code>bioskopdb.listazanrova.idFilm</code>.
	 */
	public final TableField<ListazanrovaRecord, Integer> IDFILM = createField("idFilm", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>bioskopdb.listazanrova.idZanr</code>.
	 */
	public final TableField<ListazanrovaRecord, Integer> IDZANR = createField("idZanr", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>bioskopdb.listazanrova</code> table reference
	 */
	public Listazanrova() {
		this("listazanrova", null);
	}

	/**
	 * Create an aliased <code>bioskopdb.listazanrova</code> table reference
	 */
	public Listazanrova(String alias) {
		this(alias, LISTAZANROVA);
	}

	private Listazanrova(String alias, Table<ListazanrovaRecord> aliased) {
		this(alias, aliased, null);
	}

	private Listazanrova(String alias, Table<ListazanrovaRecord> aliased, Field<?>[] parameters) {
		super(alias, Bioskopdb.BIOSKOPDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ListazanrovaRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ListazanrovaRecord, ?>>asList(Keys.LISTAZANROVA_IBFK_1, Keys.LISTAZANROVA_IBFK_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Listazanrova as(String alias) {
		return new Listazanrova(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Listazanrova rename(String name) {
		return new Listazanrova(name, null);
	}
}
