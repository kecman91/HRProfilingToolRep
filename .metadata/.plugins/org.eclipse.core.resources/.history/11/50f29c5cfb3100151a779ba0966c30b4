/**
 * This class is generated by jOOQ
 */
package org.gradle.information_schema.tables;


import javax.annotation.Generated;

import org.gradle.information_schema.InformationSchema;
import org.gradle.information_schema.tables.records.ParametersRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Parameters extends TableImpl<ParametersRecord> {

	private static final long serialVersionUID = 485105676;

	/**
	 * The reference instance of <code>information_schema.PARAMETERS</code>
	 */
	public static final Parameters PARAMETERS = new Parameters();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ParametersRecord> getRecordType() {
		return ParametersRecord.class;
	}

	/**
	 * The column <code>information_schema.PARAMETERS.SPECIFIC_CATALOG</code>.
	 */
	public final TableField<ParametersRecord, String> SPECIFIC_CATALOG = createField("SPECIFIC_CATALOG", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.SPECIFIC_SCHEMA</code>.
	 */
	public final TableField<ParametersRecord, String> SPECIFIC_SCHEMA = createField("SPECIFIC_SCHEMA", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.SPECIFIC_NAME</code>.
	 */
	public final TableField<ParametersRecord, String> SPECIFIC_NAME = createField("SPECIFIC_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.ORDINAL_POSITION</code>.
	 */
	public final TableField<ParametersRecord, Integer> ORDINAL_POSITION = createField("ORDINAL_POSITION", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.PARAMETER_MODE</code>.
	 */
	public final TableField<ParametersRecord, String> PARAMETER_MODE = createField("PARAMETER_MODE", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.PARAMETER_NAME</code>.
	 */
	public final TableField<ParametersRecord, String> PARAMETER_NAME = createField("PARAMETER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.DATA_TYPE</code>.
	 */
	public final TableField<ParametersRecord, String> DATA_TYPE = createField("DATA_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.CHARACTER_MAXIMUM_LENGTH</code>.
	 */
	public final TableField<ParametersRecord, Integer> CHARACTER_MAXIMUM_LENGTH = createField("CHARACTER_MAXIMUM_LENGTH", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.CHARACTER_OCTET_LENGTH</code>.
	 */
	public final TableField<ParametersRecord, Integer> CHARACTER_OCTET_LENGTH = createField("CHARACTER_OCTET_LENGTH", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.NUMERIC_PRECISION</code>.
	 */
	public final TableField<ParametersRecord, Integer> NUMERIC_PRECISION = createField("NUMERIC_PRECISION", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.NUMERIC_SCALE</code>.
	 */
	public final TableField<ParametersRecord, Integer> NUMERIC_SCALE = createField("NUMERIC_SCALE", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.CHARACTER_SET_NAME</code>.
	 */
	public final TableField<ParametersRecord, String> CHARACTER_SET_NAME = createField("CHARACTER_SET_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.COLLATION_NAME</code>.
	 */
	public final TableField<ParametersRecord, String> COLLATION_NAME = createField("COLLATION_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.DTD_IDENTIFIER</code>.
	 */
	public final TableField<ParametersRecord, String> DTD_IDENTIFIER = createField("DTD_IDENTIFIER", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>information_schema.PARAMETERS.ROUTINE_TYPE</code>.
	 */
	public final TableField<ParametersRecord, String> ROUTINE_TYPE = createField("ROUTINE_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(9).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>information_schema.PARAMETERS</code> table reference
	 */
	public Parameters() {
		this("PARAMETERS", null);
	}

	/**
	 * Create an aliased <code>information_schema.PARAMETERS</code> table reference
	 */
	public Parameters(String alias) {
		this(alias, PARAMETERS);
	}

	private Parameters(String alias, Table<ParametersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Parameters(String alias, Table<ParametersRecord> aliased, Field<?>[] parameters) {
		super(alias, InformationSchema.INFORMATION_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Parameters as(String alias) {
		return new Parameters(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Parameters rename(String name) {
		return new Parameters(name, null);
	}
}
