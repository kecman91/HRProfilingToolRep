/**
 * This class is generated by jOOQ
 */
package org.gradle.blogdb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.blogdb.Blogdb;
import org.gradle.blogdb.Keys;
import org.gradle.blogdb.tables.records.BlogkorisnikRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Blogkorisnik extends TableImpl<BlogkorisnikRecord> {

	private static final long serialVersionUID = 1333754200;

	/**
	 * The reference instance of <code>blogdb.blogkorisnik</code>
	 */
	public static final Blogkorisnik BLOGKORISNIK = new Blogkorisnik();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BlogkorisnikRecord> getRecordType() {
		return BlogkorisnikRecord.class;
	}

	/**
	 * The column <code>blogdb.blogkorisnik.username</code>.
	 */
	public final TableField<BlogkorisnikRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>blogdb.blogkorisnik.password</code>.
	 */
	public final TableField<BlogkorisnikRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>blogdb.blogkorisnik.idKorisnik</code>.
	 */
	public final TableField<BlogkorisnikRecord, Integer> IDKORISNIK = createField("idKorisnik", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>blogdb.blogkorisnik.nickname</code>.
	 */
	public final TableField<BlogkorisnikRecord, String> NICKNAME = createField("nickname", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>blogdb.blogkorisnik</code> table reference
	 */
	public Blogkorisnik() {
		this("blogkorisnik", null);
	}

	/**
	 * Create an aliased <code>blogdb.blogkorisnik</code> table reference
	 */
	public Blogkorisnik(String alias) {
		this(alias, BLOGKORISNIK);
	}

	private Blogkorisnik(String alias, Table<BlogkorisnikRecord> aliased) {
		this(alias, aliased, null);
	}

	private Blogkorisnik(String alias, Table<BlogkorisnikRecord> aliased, Field<?>[] parameters) {
		super(alias, Blogdb.BLOGDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<BlogkorisnikRecord, Integer> getIdentity() {
		return Keys.IDENTITY_BLOGKORISNIK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BlogkorisnikRecord> getPrimaryKey() {
		return Keys.KEY_BLOGKORISNIK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BlogkorisnikRecord>> getKeys() {
		return Arrays.<UniqueKey<BlogkorisnikRecord>>asList(Keys.KEY_BLOGKORISNIK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Blogkorisnik as(String alias) {
		return new Blogkorisnik(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Blogkorisnik rename(String name) {
		return new Blogkorisnik(name, null);
	}
}
