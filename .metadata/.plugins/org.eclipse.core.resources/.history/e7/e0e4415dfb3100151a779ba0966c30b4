/**
 * This class is generated by jOOQ
 */
package org.gradle.oglasdb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.oglasdb.Keys;
import org.gradle.oglasdb.Oglasdb;
import org.gradle.oglasdb.tables.records.OglaskorisnikRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Oglaskorisnik extends TableImpl<OglaskorisnikRecord> {

	private static final long serialVersionUID = -2066938039;

	/**
	 * The reference instance of <code>oglasdb.oglaskorisnik</code>
	 */
	public static final Oglaskorisnik OGLASKORISNIK = new Oglaskorisnik();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OglaskorisnikRecord> getRecordType() {
		return OglaskorisnikRecord.class;
	}

	/**
	 * The column <code>oglasdb.oglaskorisnik.idKorisnik</code>.
	 */
	public final TableField<OglaskorisnikRecord, Integer> IDKORISNIK = createField("idKorisnik", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oglasdb.oglaskorisnik.username</code>.
	 */
	public final TableField<OglaskorisnikRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>oglasdb.oglaskorisnik.password</code>.
	 */
	public final TableField<OglaskorisnikRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>oglasdb.oglaskorisnik.nickname</code>.
	 */
	public final TableField<OglaskorisnikRecord, String> NICKNAME = createField("nickname", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>oglasdb.oglaskorisnik</code> table reference
	 */
	public Oglaskorisnik() {
		this("oglaskorisnik", null);
	}

	/**
	 * Create an aliased <code>oglasdb.oglaskorisnik</code> table reference
	 */
	public Oglaskorisnik(String alias) {
		this(alias, OGLASKORISNIK);
	}

	private Oglaskorisnik(String alias, Table<OglaskorisnikRecord> aliased) {
		this(alias, aliased, null);
	}

	private Oglaskorisnik(String alias, Table<OglaskorisnikRecord> aliased, Field<?>[] parameters) {
		super(alias, Oglasdb.OGLASDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<OglaskorisnikRecord, Integer> getIdentity() {
		return Keys.IDENTITY_OGLASKORISNIK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OglaskorisnikRecord> getPrimaryKey() {
		return Keys.KEY_OGLASKORISNIK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OglaskorisnikRecord>> getKeys() {
		return Arrays.<UniqueKey<OglaskorisnikRecord>>asList(Keys.KEY_OGLASKORISNIK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Oglaskorisnik as(String alias) {
		return new Oglaskorisnik(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Oglaskorisnik rename(String name) {
		return new Oglaskorisnik(name, null);
	}
}
