/**
 * This class is generated by jOOQ
 */
package org.gradle.execom.tables.records;


import javax.annotation.Generated;

import org.gradle.execom.tables.Projectinfo;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectinfoRecord extends UpdatableRecordImpl<ProjectinfoRecord> implements Record4<Integer, Integer, String, String> {

	private static final long serialVersionUID = -1583250664;

	/**
	 * Setter for <code>execom.projectinfo.IDPROJECT</code>.
	 */
	public void setIdproject(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>execom.projectinfo.IDPROJECT</code>.
	 */
	public Integer getIdproject() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>execom.projectinfo.IDEMPLOYEE</code>.
	 */
	public void setIdemployee(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>execom.projectinfo.IDEMPLOYEE</code>.
	 */
	public Integer getIdemployee() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>execom.projectinfo.JOB_RESPONSIBILITIES</code>.
	 */
	public void setJobResponsibilities(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>execom.projectinfo.JOB_RESPONSIBILITIES</code>.
	 */
	public String getJobResponsibilities() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>execom.projectinfo.PROJECT_EXP</code>.
	 */
	public void setProjectExp(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>execom.projectinfo.PROJECT_EXP</code>.
	 */
	public String getProjectExp() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<Integer, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Projectinfo.PROJECTINFO.IDPROJECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Projectinfo.PROJECTINFO.IDEMPLOYEE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Projectinfo.PROJECTINFO.JOB_RESPONSIBILITIES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Projectinfo.PROJECTINFO.PROJECT_EXP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdproject();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getIdemployee();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getJobResponsibilities();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getProjectExp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectinfoRecord value1(Integer value) {
		setIdproject(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectinfoRecord value2(Integer value) {
		setIdemployee(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectinfoRecord value3(String value) {
		setJobResponsibilities(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectinfoRecord value4(String value) {
		setProjectExp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectinfoRecord values(Integer value1, Integer value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ProjectinfoRecord
	 */
	public ProjectinfoRecord() {
		super(Projectinfo.PROJECTINFO);
	}

	/**
	 * Create a detached, initialised ProjectinfoRecord
	 */
	public ProjectinfoRecord(Integer idproject, Integer idemployee, String jobResponsibilities, String projectExp) {
		super(Projectinfo.PROJECTINFO);

		setValue(0, idproject);
		setValue(1, idemployee);
		setValue(2, jobResponsibilities);
		setValue(3, projectExp);
	}
}
