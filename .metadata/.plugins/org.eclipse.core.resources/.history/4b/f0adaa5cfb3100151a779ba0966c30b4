/**
 * This class is generated by jOOQ
 */
package org.gradle.information_schema.tables.records;


import javax.annotation.Generated;

import org.gradle.information_schema.tables.InnodbCmpReset;
import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbCmpResetRecord extends TableRecordImpl<InnodbCmpResetRecord> implements Record6<Integer, Integer, Integer, Integer, Integer, Integer> {

	private static final long serialVersionUID = -1621919997;

	/**
	 * Setter for <code>information_schema.INNODB_CMP_RESET.page_size</code>.
	 */
	public void setPageSize(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_CMP_RESET.page_size</code>.
	 */
	public Integer getPageSize() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>information_schema.INNODB_CMP_RESET.compress_ops</code>.
	 */
	public void setCompressOps(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_CMP_RESET.compress_ops</code>.
	 */
	public Integer getCompressOps() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>information_schema.INNODB_CMP_RESET.compress_ops_ok</code>.
	 */
	public void setCompressOpsOk(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_CMP_RESET.compress_ops_ok</code>.
	 */
	public Integer getCompressOpsOk() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>information_schema.INNODB_CMP_RESET.compress_time</code>.
	 */
	public void setCompressTime(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_CMP_RESET.compress_time</code>.
	 */
	public Integer getCompressTime() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>information_schema.INNODB_CMP_RESET.uncompress_ops</code>.
	 */
	public void setUncompressOps(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_CMP_RESET.uncompress_ops</code>.
	 */
	public Integer getUncompressOps() {
		return (Integer) getValue(4);
	}

	/**
	 * Setter for <code>information_schema.INNODB_CMP_RESET.uncompress_time</code>.
	 */
	public void setUncompressTime(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_CMP_RESET.uncompress_time</code>.
	 */
	public Integer getUncompressTime() {
		return (Integer) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return InnodbCmpReset.INNODB_CMP_RESET.PAGE_SIZE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return InnodbCmpReset.INNODB_CMP_RESET.COMPRESS_OPS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return InnodbCmpReset.INNODB_CMP_RESET.COMPRESS_OPS_OK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return InnodbCmpReset.INNODB_CMP_RESET.COMPRESS_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return InnodbCmpReset.INNODB_CMP_RESET.UNCOMPRESS_OPS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return InnodbCmpReset.INNODB_CMP_RESET.UNCOMPRESS_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getPageSize();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getCompressOps();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getCompressOpsOk();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getCompressTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getUncompressOps();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getUncompressTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbCmpResetRecord value1(Integer value) {
		setPageSize(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbCmpResetRecord value2(Integer value) {
		setCompressOps(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbCmpResetRecord value3(Integer value) {
		setCompressOpsOk(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbCmpResetRecord value4(Integer value) {
		setCompressTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbCmpResetRecord value5(Integer value) {
		setUncompressOps(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbCmpResetRecord value6(Integer value) {
		setUncompressTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbCmpResetRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached InnodbCmpResetRecord
	 */
	public InnodbCmpResetRecord() {
		super(InnodbCmpReset.INNODB_CMP_RESET);
	}

	/**
	 * Create a detached, initialised InnodbCmpResetRecord
	 */
	public InnodbCmpResetRecord(Integer pageSize, Integer compressOps, Integer compressOpsOk, Integer compressTime, Integer uncompressOps, Integer uncompressTime) {
		super(InnodbCmpReset.INNODB_CMP_RESET);

		setValue(0, pageSize);
		setValue(1, compressOps);
		setValue(2, compressOpsOk);
		setValue(3, compressTime);
		setValue(4, uncompressOps);
		setValue(5, uncompressTime);
	}
}
