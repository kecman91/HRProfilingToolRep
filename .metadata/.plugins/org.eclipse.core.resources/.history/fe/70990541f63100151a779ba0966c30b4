/**
 * This class is generated by jOOQ
 */
package org.gradle.bioskopdb;


import javax.annotation.Generated;

import org.gradle.bioskopdb.tables.Film;
import org.gradle.bioskopdb.tables.Korisnik;
import org.gradle.bioskopdb.tables.Listazanrova;
import org.gradle.bioskopdb.tables.Mesto;
import org.gradle.bioskopdb.tables.Projekcija;
import org.gradle.bioskopdb.tables.Sala;
import org.gradle.bioskopdb.tables.Zanr;
import org.gradle.bioskopdb.tables.records.FilmRecord;
import org.gradle.bioskopdb.tables.records.KorisnikRecord;
import org.gradle.bioskopdb.tables.records.ListazanrovaRecord;
import org.gradle.bioskopdb.tables.records.MestoRecord;
import org.gradle.bioskopdb.tables.records.ProjekcijaRecord;
import org.gradle.bioskopdb.tables.records.SalaRecord;
import org.gradle.bioskopdb.tables.records.ZanrRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>bioskopdb</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<FilmRecord, Integer> IDENTITY_FILM = Identities0.IDENTITY_FILM;
	public static final Identity<KorisnikRecord, Integer> IDENTITY_KORISNIK = Identities0.IDENTITY_KORISNIK;
	public static final Identity<ProjekcijaRecord, Integer> IDENTITY_PROJEKCIJA = Identities0.IDENTITY_PROJEKCIJA;
	public static final Identity<SalaRecord, Integer> IDENTITY_SALA = Identities0.IDENTITY_SALA;
	public static final Identity<ZanrRecord, Integer> IDENTITY_ZANR = Identities0.IDENTITY_ZANR;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<FilmRecord> KEY_FILM_PRIMARY = UniqueKeys0.KEY_FILM_PRIMARY;
	public static final UniqueKey<KorisnikRecord> KEY_KORISNIK_PRIMARY = UniqueKeys0.KEY_KORISNIK_PRIMARY;
	public static final UniqueKey<MestoRecord> KEY_MESTO_PRIMARY = UniqueKeys0.KEY_MESTO_PRIMARY;
	public static final UniqueKey<ProjekcijaRecord> KEY_PROJEKCIJA_PRIMARY = UniqueKeys0.KEY_PROJEKCIJA_PRIMARY;
	public static final UniqueKey<SalaRecord> KEY_SALA_PRIMARY = UniqueKeys0.KEY_SALA_PRIMARY;
	public static final UniqueKey<ZanrRecord> KEY_ZANR_PRIMARY = UniqueKeys0.KEY_ZANR_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<ListazanrovaRecord, FilmRecord> LISTAZANROVA_IBFK_1 = ForeignKeys0.LISTAZANROVA_IBFK_1;
	public static final ForeignKey<ListazanrovaRecord, ZanrRecord> LISTAZANROVA_IBFK_2 = ForeignKeys0.LISTAZANROVA_IBFK_2;
	public static final ForeignKey<MestoRecord, KorisnikRecord> MESTO_IBFK_1 = ForeignKeys0.MESTO_IBFK_1;
	public static final ForeignKey<MestoRecord, ProjekcijaRecord> MESTO_IBFK_2 = ForeignKeys0.MESTO_IBFK_2;
	public static final ForeignKey<ProjekcijaRecord, SalaRecord> PROJEKCIJA_IBFK_1 = ForeignKeys0.PROJEKCIJA_IBFK_1;
	public static final ForeignKey<ProjekcijaRecord, FilmRecord> PROJEKCIJA_IBFK_2 = ForeignKeys0.PROJEKCIJA_IBFK_2;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<FilmRecord, Integer> IDENTITY_FILM = createIdentity(Film.FILM, Film.FILM.IDFILM);
		public static Identity<KorisnikRecord, Integer> IDENTITY_KORISNIK = createIdentity(Korisnik.KORISNIK, Korisnik.KORISNIK.IDKORISNIK);
		public static Identity<ProjekcijaRecord, Integer> IDENTITY_PROJEKCIJA = createIdentity(Projekcija.PROJEKCIJA, Projekcija.PROJEKCIJA.IDPROJEKCIJA);
		public static Identity<SalaRecord, Integer> IDENTITY_SALA = createIdentity(Sala.SALA, Sala.SALA.IDSALA);
		public static Identity<ZanrRecord, Integer> IDENTITY_ZANR = createIdentity(Zanr.ZANR, Zanr.ZANR.IDZANR);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<FilmRecord> KEY_FILM_PRIMARY = createUniqueKey(Film.FILM, Film.FILM.IDFILM);
		public static final UniqueKey<KorisnikRecord> KEY_KORISNIK_PRIMARY = createUniqueKey(Korisnik.KORISNIK, Korisnik.KORISNIK.IDKORISNIK);
		public static final UniqueKey<MestoRecord> KEY_MESTO_PRIMARY = createUniqueKey(Mesto.MESTO, Mesto.MESTO.IDMESTO);
		public static final UniqueKey<ProjekcijaRecord> KEY_PROJEKCIJA_PRIMARY = createUniqueKey(Projekcija.PROJEKCIJA, Projekcija.PROJEKCIJA.IDPROJEKCIJA);
		public static final UniqueKey<SalaRecord> KEY_SALA_PRIMARY = createUniqueKey(Sala.SALA, Sala.SALA.IDSALA);
		public static final UniqueKey<ZanrRecord> KEY_ZANR_PRIMARY = createUniqueKey(Zanr.ZANR, Zanr.ZANR.IDZANR);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<ListazanrovaRecord, FilmRecord> LISTAZANROVA_IBFK_1 = createForeignKey(org.gradle.bioskopdb.Keys.KEY_FILM_PRIMARY, Listazanrova.LISTAZANROVA, Listazanrova.LISTAZANROVA.IDFILM);
		public static final ForeignKey<ListazanrovaRecord, ZanrRecord> LISTAZANROVA_IBFK_2 = createForeignKey(org.gradle.bioskopdb.Keys.KEY_ZANR_PRIMARY, Listazanrova.LISTAZANROVA, Listazanrova.LISTAZANROVA.IDZANR);
		public static final ForeignKey<MestoRecord, KorisnikRecord> MESTO_IBFK_1 = createForeignKey(org.gradle.bioskopdb.Keys.KEY_KORISNIK_PRIMARY, Mesto.MESTO, Mesto.MESTO.IDKORISNIK);
		public static final ForeignKey<MestoRecord, ProjekcijaRecord> MESTO_IBFK_2 = createForeignKey(org.gradle.bioskopdb.Keys.KEY_PROJEKCIJA_PRIMARY, Mesto.MESTO, Mesto.MESTO.IDPROJEKCIJA);
		public static final ForeignKey<ProjekcijaRecord, SalaRecord> PROJEKCIJA_IBFK_1 = createForeignKey(org.gradle.bioskopdb.Keys.KEY_SALA_PRIMARY, Projekcija.PROJEKCIJA, Projekcija.PROJEKCIJA.IDSALA);
		public static final ForeignKey<ProjekcijaRecord, FilmRecord> PROJEKCIJA_IBFK_2 = createForeignKey(org.gradle.bioskopdb.Keys.KEY_FILM_PRIMARY, Projekcija.PROJEKCIJA, Projekcija.PROJEKCIJA.IDFILM);
	}
}
