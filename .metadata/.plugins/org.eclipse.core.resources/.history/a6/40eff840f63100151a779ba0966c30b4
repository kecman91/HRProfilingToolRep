/**
 * This class is generated by jOOQ
 */
package org.gradle.tim1.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.tim1.Keys;
import org.gradle.tim1.Tim1;
import org.gradle.tim1.tables.records.PostRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Post extends TableImpl<PostRecord> {

	private static final long serialVersionUID = 1082788268;

	/**
	 * The reference instance of <code>tim1.post</code>
	 */
	public static final Post POST = new Post();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PostRecord> getRecordType() {
		return PostRecord.class;
	}

	/**
	 * The column <code>tim1.post.idPost</code>.
	 */
	public final TableField<PostRecord, Integer> IDPOST = createField("idPost", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>tim1.post.text</code>.
	 */
	public final TableField<PostRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>tim1.post.date</code>.
	 */
	public final TableField<PostRecord, Date> DATE = createField("date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>tim1.post.idTopic</code>.
	 */
	public final TableField<PostRecord, Integer> IDTOPIC = createField("idTopic", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>tim1.post.mail</code>.
	 */
	public final TableField<PostRecord, String> MAIL = createField("mail", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * Create a <code>tim1.post</code> table reference
	 */
	public Post() {
		this("post", null);
	}

	/**
	 * Create an aliased <code>tim1.post</code> table reference
	 */
	public Post(String alias) {
		this(alias, POST);
	}

	private Post(String alias, Table<PostRecord> aliased) {
		this(alias, aliased, null);
	}

	private Post(String alias, Table<PostRecord> aliased, Field<?>[] parameters) {
		super(alias, Tim1.TIM1, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PostRecord, Integer> getIdentity() {
		return Keys.IDENTITY_POST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PostRecord> getPrimaryKey() {
		return Keys.KEY_POST_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PostRecord>> getKeys() {
		return Arrays.<UniqueKey<PostRecord>>asList(Keys.KEY_POST_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PostRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PostRecord, ?>>asList(Keys.POST_IBFK_2, Keys.POST_IBFK_3);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Post as(String alias) {
		return new Post(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Post rename(String name) {
		return new Post(name, null);
	}
}
