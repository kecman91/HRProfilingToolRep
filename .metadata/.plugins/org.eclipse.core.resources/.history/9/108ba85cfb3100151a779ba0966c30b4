/**
 * This class is generated by jOOQ
 */
package org.gradle.information_schema.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.gradle.information_schema.tables.Events;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsRecord extends TableRecordImpl<EventsRecord> {

	private static final long serialVersionUID = 1839759147;

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_CATALOG</code>.
	 */
	public void setEventCatalog(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_CATALOG</code>.
	 */
	public String getEventCatalog() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_SCHEMA</code>.
	 */
	public void setEventSchema(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_SCHEMA</code>.
	 */
	public String getEventSchema() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_NAME</code>.
	 */
	public void setEventName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_NAME</code>.
	 */
	public String getEventName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.DEFINER</code>.
	 */
	public void setDefiner(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.DEFINER</code>.
	 */
	public String getDefiner() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.TIME_ZONE</code>.
	 */
	public void setTimeZone(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.TIME_ZONE</code>.
	 */
	public String getTimeZone() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_BODY</code>.
	 */
	public void setEventBody(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_BODY</code>.
	 */
	public String getEventBody() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_DEFINITION</code>.
	 */
	public void setEventDefinition(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_DEFINITION</code>.
	 */
	public String getEventDefinition() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_TYPE</code>.
	 */
	public void setEventType(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_TYPE</code>.
	 */
	public String getEventType() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.EXECUTE_AT</code>.
	 */
	public void setExecuteAt(Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.EXECUTE_AT</code>.
	 */
	public Timestamp getExecuteAt() {
		return (Timestamp) getValue(8);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.INTERVAL_VALUE</code>.
	 */
	public void setIntervalValue(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.INTERVAL_VALUE</code>.
	 */
	public String getIntervalValue() {
		return (String) getValue(9);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.INTERVAL_FIELD</code>.
	 */
	public void setIntervalField(String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.INTERVAL_FIELD</code>.
	 */
	public String getIntervalField() {
		return (String) getValue(10);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.SQL_MODE</code>.
	 */
	public void setSqlMode(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.SQL_MODE</code>.
	 */
	public String getSqlMode() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.STARTS</code>.
	 */
	public void setStarts(Timestamp value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.STARTS</code>.
	 */
	public Timestamp getStarts() {
		return (Timestamp) getValue(12);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.ENDS</code>.
	 */
	public void setEnds(Timestamp value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.ENDS</code>.
	 */
	public Timestamp getEnds() {
		return (Timestamp) getValue(13);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.STATUS</code>.
	 */
	public void setStatus(String value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.STATUS</code>.
	 */
	public String getStatus() {
		return (String) getValue(14);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.ON_COMPLETION</code>.
	 */
	public void setOnCompletion(String value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.ON_COMPLETION</code>.
	 */
	public String getOnCompletion() {
		return (String) getValue(15);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.CREATED</code>.
	 */
	public void setCreated(Timestamp value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.CREATED</code>.
	 */
	public Timestamp getCreated() {
		return (Timestamp) getValue(16);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.LAST_ALTERED</code>.
	 */
	public void setLastAltered(Timestamp value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.LAST_ALTERED</code>.
	 */
	public Timestamp getLastAltered() {
		return (Timestamp) getValue(17);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.LAST_EXECUTED</code>.
	 */
	public void setLastExecuted(Timestamp value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.LAST_EXECUTED</code>.
	 */
	public Timestamp getLastExecuted() {
		return (Timestamp) getValue(18);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.EVENT_COMMENT</code>.
	 */
	public void setEventComment(String value) {
		setValue(19, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.EVENT_COMMENT</code>.
	 */
	public String getEventComment() {
		return (String) getValue(19);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.ORIGINATOR</code>.
	 */
	public void setOriginator(Long value) {
		setValue(20, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.ORIGINATOR</code>.
	 */
	public Long getOriginator() {
		return (Long) getValue(20);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.CHARACTER_SET_CLIENT</code>.
	 */
	public void setCharacterSetClient(String value) {
		setValue(21, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.CHARACTER_SET_CLIENT</code>.
	 */
	public String getCharacterSetClient() {
		return (String) getValue(21);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.COLLATION_CONNECTION</code>.
	 */
	public void setCollationConnection(String value) {
		setValue(22, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.COLLATION_CONNECTION</code>.
	 */
	public String getCollationConnection() {
		return (String) getValue(22);
	}

	/**
	 * Setter for <code>information_schema.EVENTS.DATABASE_COLLATION</code>.
	 */
	public void setDatabaseCollation(String value) {
		setValue(23, value);
	}

	/**
	 * Getter for <code>information_schema.EVENTS.DATABASE_COLLATION</code>.
	 */
	public String getDatabaseCollation() {
		return (String) getValue(23);
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EventsRecord
	 */
	public EventsRecord() {
		super(Events.EVENTS);
	}

	/**
	 * Create a detached, initialised EventsRecord
	 */
	public EventsRecord(String eventCatalog, String eventSchema, String eventName, String definer, String timeZone, String eventBody, String eventDefinition, String eventType, Timestamp executeAt, String intervalValue, String intervalField, String sqlMode, Timestamp starts, Timestamp ends, String status, String onCompletion, Timestamp created, Timestamp lastAltered, Timestamp lastExecuted, String eventComment, Long originator, String characterSetClient, String collationConnection, String databaseCollation) {
		super(Events.EVENTS);

		setValue(0, eventCatalog);
		setValue(1, eventSchema);
		setValue(2, eventName);
		setValue(3, definer);
		setValue(4, timeZone);
		setValue(5, eventBody);
		setValue(6, eventDefinition);
		setValue(7, eventType);
		setValue(8, executeAt);
		setValue(9, intervalValue);
		setValue(10, intervalField);
		setValue(11, sqlMode);
		setValue(12, starts);
		setValue(13, ends);
		setValue(14, status);
		setValue(15, onCompletion);
		setValue(16, created);
		setValue(17, lastAltered);
		setValue(18, lastExecuted);
		setValue(19, eventComment);
		setValue(20, originator);
		setValue(21, characterSetClient);
		setValue(22, collationConnection);
		setValue(23, databaseCollation);
	}
}
