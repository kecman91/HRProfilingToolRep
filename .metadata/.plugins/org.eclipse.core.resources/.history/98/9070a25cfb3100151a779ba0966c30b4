/**
 * This class is generated by jOOQ
 */
package org.gradle.information_schema.tables;


import javax.annotation.Generated;

import org.gradle.information_schema.InformationSchema;
import org.gradle.information_schema.tables.records.TableConstraintsRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableConstraints extends TableImpl<TableConstraintsRecord> {

	private static final long serialVersionUID = -2024877883;

	/**
	 * The reference instance of <code>information_schema.TABLE_CONSTRAINTS</code>
	 */
	public static final TableConstraints TABLE_CONSTRAINTS = new TableConstraints();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TableConstraintsRecord> getRecordType() {
		return TableConstraintsRecord.class;
	}

	/**
	 * The column <code>information_schema.TABLE_CONSTRAINTS.CONSTRAINT_CATALOG</code>.
	 */
	public final TableField<TableConstraintsRecord, String> CONSTRAINT_CATALOG = createField("CONSTRAINT_CATALOG", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA</code>.
	 */
	public final TableField<TableConstraintsRecord, String> CONSTRAINT_SCHEMA = createField("CONSTRAINT_SCHEMA", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.TABLE_CONSTRAINTS.CONSTRAINT_NAME</code>.
	 */
	public final TableField<TableConstraintsRecord, String> CONSTRAINT_NAME = createField("CONSTRAINT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.TABLE_CONSTRAINTS.TABLE_SCHEMA</code>.
	 */
	public final TableField<TableConstraintsRecord, String> TABLE_SCHEMA = createField("TABLE_SCHEMA", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.TABLE_CONSTRAINTS.TABLE_NAME</code>.
	 */
	public final TableField<TableConstraintsRecord, String> TABLE_NAME = createField("TABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>information_schema.TABLE_CONSTRAINTS.CONSTRAINT_TYPE</code>.
	 */
	public final TableField<TableConstraintsRecord, String> CONSTRAINT_TYPE = createField("CONSTRAINT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>information_schema.TABLE_CONSTRAINTS</code> table reference
	 */
	public TableConstraints() {
		this("TABLE_CONSTRAINTS", null);
	}

	/**
	 * Create an aliased <code>information_schema.TABLE_CONSTRAINTS</code> table reference
	 */
	public TableConstraints(String alias) {
		this(alias, TABLE_CONSTRAINTS);
	}

	private TableConstraints(String alias, Table<TableConstraintsRecord> aliased) {
		this(alias, aliased, null);
	}

	private TableConstraints(String alias, Table<TableConstraintsRecord> aliased, Field<?>[] parameters) {
		super(alias, InformationSchema.INFORMATION_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TableConstraints as(String alias) {
		return new TableConstraints(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TableConstraints rename(String name) {
		return new TableConstraints(name, null);
	}
}
