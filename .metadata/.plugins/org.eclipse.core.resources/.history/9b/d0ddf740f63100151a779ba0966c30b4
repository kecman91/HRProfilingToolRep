/**
 * This class is generated by jOOQ
 */
package org.gradle.tim1.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.tim1.Keys;
import org.gradle.tim1.Tim1;
import org.gradle.tim1.tables.records.CategoryRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Category extends TableImpl<CategoryRecord> {

	private static final long serialVersionUID = -410236567;

	/**
	 * The reference instance of <code>tim1.category</code>
	 */
	public static final Category CATEGORY = new Category();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CategoryRecord> getRecordType() {
		return CategoryRecord.class;
	}

	/**
	 * The column <code>tim1.category.idCategory</code>.
	 */
	public final TableField<CategoryRecord, Integer> IDCATEGORY = createField("idCategory", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>tim1.category.name</code>.
	 */
	public final TableField<CategoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>tim1.category</code> table reference
	 */
	public Category() {
		this("category", null);
	}

	/**
	 * Create an aliased <code>tim1.category</code> table reference
	 */
	public Category(String alias) {
		this(alias, CATEGORY);
	}

	private Category(String alias, Table<CategoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private Category(String alias, Table<CategoryRecord> aliased, Field<?>[] parameters) {
		super(alias, Tim1.TIM1, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CategoryRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CATEGORY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CategoryRecord> getPrimaryKey() {
		return Keys.KEY_CATEGORY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CategoryRecord>> getKeys() {
		return Arrays.<UniqueKey<CategoryRecord>>asList(Keys.KEY_CATEGORY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Category as(String alias) {
		return new Category(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Category rename(String name) {
		return new Category(name, null);
	}
}
