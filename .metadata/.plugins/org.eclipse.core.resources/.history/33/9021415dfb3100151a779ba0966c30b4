/**
 * This class is generated by jOOQ
 */
package org.gradle.oglasdb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.oglasdb.Keys;
import org.gradle.oglasdb.Oglasdb;
import org.gradle.oglasdb.tables.records.OglasRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Oglas extends TableImpl<OglasRecord> {

	private static final long serialVersionUID = 433766516;

	/**
	 * The reference instance of <code>oglasdb.oglas</code>
	 */
	public static final Oglas OGLAS = new Oglas();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OglasRecord> getRecordType() {
		return OglasRecord.class;
	}

	/**
	 * The column <code>oglasdb.oglas.idOglasa</code>.
	 */
	public final TableField<OglasRecord, Integer> IDOGLASA = createField("idOglasa", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>oglasdb.oglas.tekst</code>.
	 */
	public final TableField<OglasRecord, String> TEKST = createField("tekst", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>oglasdb.oglas.brojPregleda</code>.
	 */
	public final TableField<OglasRecord, Integer> BROJPREGLEDA = createField("brojPregleda", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>oglasdb.oglas.idKorisnika</code>.
	 */
	public final TableField<OglasRecord, Integer> IDKORISNIKA = createField("idKorisnika", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>oglasdb.oglas</code> table reference
	 */
	public Oglas() {
		this("oglas", null);
	}

	/**
	 * Create an aliased <code>oglasdb.oglas</code> table reference
	 */
	public Oglas(String alias) {
		this(alias, OGLAS);
	}

	private Oglas(String alias, Table<OglasRecord> aliased) {
		this(alias, aliased, null);
	}

	private Oglas(String alias, Table<OglasRecord> aliased, Field<?>[] parameters) {
		super(alias, Oglasdb.OGLASDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<OglasRecord, Integer> getIdentity() {
		return Keys.IDENTITY_OGLAS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OglasRecord> getPrimaryKey() {
		return Keys.KEY_OGLAS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OglasRecord>> getKeys() {
		return Arrays.<UniqueKey<OglasRecord>>asList(Keys.KEY_OGLAS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OglasRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OglasRecord, ?>>asList(Keys.OGLAS_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Oglas as(String alias) {
		return new Oglas(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Oglas rename(String name) {
		return new Oglas(name, null);
	}
}
