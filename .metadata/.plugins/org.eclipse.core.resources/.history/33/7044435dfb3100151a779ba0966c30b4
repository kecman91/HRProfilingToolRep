/**
 * This class is generated by jOOQ
 */
package org.gradle.oglasdb.tables.records;


import javax.annotation.Generated;

import org.gradle.oglasdb.tables.Oglaskorisnik;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OglaskorisnikRecord extends UpdatableRecordImpl<OglaskorisnikRecord> implements Record4<Integer, String, String, String> {

	private static final long serialVersionUID = -1646562314;

	/**
	 * Setter for <code>oglasdb.oglaskorisnik.idKorisnik</code>.
	 */
	public void setIdkorisnik(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>oglasdb.oglaskorisnik.idKorisnik</code>.
	 */
	public Integer getIdkorisnik() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>oglasdb.oglaskorisnik.username</code>.
	 */
	public void setUsername(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>oglasdb.oglaskorisnik.username</code>.
	 */
	public String getUsername() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>oglasdb.oglaskorisnik.password</code>.
	 */
	public void setPassword(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>oglasdb.oglaskorisnik.password</code>.
	 */
	public String getPassword() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>oglasdb.oglaskorisnik.nickname</code>.
	 */
	public void setNickname(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>oglasdb.oglaskorisnik.nickname</code>.
	 */
	public String getNickname() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Oglaskorisnik.OGLASKORISNIK.IDKORISNIK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Oglaskorisnik.OGLASKORISNIK.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Oglaskorisnik.OGLASKORISNIK.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Oglaskorisnik.OGLASKORISNIK.NICKNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdkorisnik();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getNickname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OglaskorisnikRecord value1(Integer value) {
		setIdkorisnik(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OglaskorisnikRecord value2(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OglaskorisnikRecord value3(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OglaskorisnikRecord value4(String value) {
		setNickname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OglaskorisnikRecord values(Integer value1, String value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OglaskorisnikRecord
	 */
	public OglaskorisnikRecord() {
		super(Oglaskorisnik.OGLASKORISNIK);
	}

	/**
	 * Create a detached, initialised OglaskorisnikRecord
	 */
	public OglaskorisnikRecord(Integer idkorisnik, String username, String password, String nickname) {
		super(Oglaskorisnik.OGLASKORISNIK);

		setValue(0, idkorisnik);
		setValue(1, username);
		setValue(2, password);
		setValue(3, nickname);
	}
}
