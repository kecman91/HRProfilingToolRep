/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.dnevnik.Dnevnik;
import org.gradle.dnevnik.Keys;
import org.gradle.dnevnik.tables.records.UcenikRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ucenik extends TableImpl<UcenikRecord> {

	private static final long serialVersionUID = 319862204;

	/**
	 * The reference instance of <code>dnevnik.ucenik</code>
	 */
	public static final Ucenik UCENIK = new Ucenik();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UcenikRecord> getRecordType() {
		return UcenikRecord.class;
	}

	/**
	 * The column <code>dnevnik.ucenik.idUcenika</code>.
	 */
	public final TableField<UcenikRecord, Integer> IDUCENIKA = createField("idUcenika", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ucenik.idRoditelja</code>.
	 */
	public final TableField<UcenikRecord, Integer> IDRODITELJA = createField("idRoditelja", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>dnevnik.ucenik.idNastavnika</code>.
	 */
	public final TableField<UcenikRecord, Integer> IDNASTAVNIKA = createField("idNastavnika", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>dnevnik.ucenik.imeUcenika</code>.
	 */
	public final TableField<UcenikRecord, String> IMEUCENIKA = createField("imeUcenika", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ucenik.prezimeUcenika</code>.
	 */
	public final TableField<UcenikRecord, String> PREZIMEUCENIKA = createField("prezimeUcenika", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ucenik.datumRodjenja</code>.
	 */
	public final TableField<UcenikRecord, Date> DATUMRODJENJA = createField("datumRodjenja", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ucenik.datumUpisa</code>.
	 */
	public final TableField<UcenikRecord, Date> DATUMUPISA = createField("datumUpisa", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ucenik.adresa</code>.
	 */
	public final TableField<UcenikRecord, String> ADRESA = createField("adresa", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ucenik.telefon</code>.
	 */
	public final TableField<UcenikRecord, String> TELEFON = createField("telefon", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>dnevnik.ucenik</code> table reference
	 */
	public Ucenik() {
		this("ucenik", null);
	}

	/**
	 * Create an aliased <code>dnevnik.ucenik</code> table reference
	 */
	public Ucenik(String alias) {
		this(alias, UCENIK);
	}

	private Ucenik(String alias, Table<UcenikRecord> aliased) {
		this(alias, aliased, null);
	}

	private Ucenik(String alias, Table<UcenikRecord> aliased, Field<?>[] parameters) {
		super(alias, Dnevnik.DNEVNIK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UcenikRecord, Integer> getIdentity() {
		return Keys.IDENTITY_UCENIK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UcenikRecord> getPrimaryKey() {
		return Keys.KEY_UCENIK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UcenikRecord>> getKeys() {
		return Arrays.<UniqueKey<UcenikRecord>>asList(Keys.KEY_UCENIK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UcenikRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UcenikRecord, ?>>asList(Keys.UCENIK_IBFK_2, Keys.UCENIK_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ucenik as(String alias) {
		return new Ucenik(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Ucenik rename(String name) {
		return new Ucenik(name, null);
	}
}
