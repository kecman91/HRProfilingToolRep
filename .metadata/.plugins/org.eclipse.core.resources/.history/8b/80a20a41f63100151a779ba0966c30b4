/**
 * This class is generated by jOOQ
 */
package org.gradle.bioskopdb.tables.records;


import javax.annotation.Generated;

import org.gradle.bioskopdb.tables.Mesto;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MestoRecord extends UpdatableRecordImpl<MestoRecord> implements Record3<Integer, Integer, Integer> {

	private static final long serialVersionUID = -1080878050;

	/**
	 * Setter for <code>bioskopdb.mesto.idMesto</code>.
	 */
	public void setIdmesto(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>bioskopdb.mesto.idMesto</code>.
	 */
	public Integer getIdmesto() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>bioskopdb.mesto.idKorisnik</code>.
	 */
	public void setIdkorisnik(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>bioskopdb.mesto.idKorisnik</code>.
	 */
	public Integer getIdkorisnik() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>bioskopdb.mesto.idProjekcija</code>.
	 */
	public void setIdprojekcija(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>bioskopdb.mesto.idProjekcija</code>.
	 */
	public Integer getIdprojekcija() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Mesto.MESTO.IDMESTO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Mesto.MESTO.IDKORISNIK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Mesto.MESTO.IDPROJEKCIJA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdmesto();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getIdkorisnik();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getIdprojekcija();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MestoRecord value1(Integer value) {
		setIdmesto(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MestoRecord value2(Integer value) {
		setIdkorisnik(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MestoRecord value3(Integer value) {
		setIdprojekcija(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MestoRecord values(Integer value1, Integer value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MestoRecord
	 */
	public MestoRecord() {
		super(Mesto.MESTO);
	}

	/**
	 * Create a detached, initialised MestoRecord
	 */
	public MestoRecord(Integer idmesto, Integer idkorisnik, Integer idprojekcija) {
		super(Mesto.MESTO);

		setValue(0, idmesto);
		setValue(1, idkorisnik);
		setValue(2, idprojekcija);
	}
}
