/**
 * This class is generated by jOOQ
 */
package org.gradle.mysql.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.gradle.mysql.enums.ProcIsDeterministic;
import org.gradle.mysql.enums.ProcLanguage;
import org.gradle.mysql.enums.ProcSecurityType;
import org.gradle.mysql.enums.ProcSqlDataAccess;
import org.gradle.mysql.enums.ProcType;
import org.gradle.mysql.tables.Proc;
import org.jooq.Field;
import org.jooq.Record20;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Stored Procedures
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcRecord extends UpdatableRecordImpl<ProcRecord> implements Record20<String, String, ProcType, String, ProcLanguage, ProcSqlDataAccess, ProcIsDeterministic, ProcSecurityType, byte[], byte[], byte[], String, Timestamp, Timestamp, String, String, String, String, String, byte[]> {

	private static final long serialVersionUID = 450025760;

	/**
	 * Setter for <code>mysql.proc.db</code>.
	 */
	public void setDb(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>mysql.proc.db</code>.
	 */
	public String getDb() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>mysql.proc.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>mysql.proc.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mysql.proc.type</code>.
	 */
	public void setType(ProcType value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>mysql.proc.type</code>.
	 */
	public ProcType getType() {
		return (ProcType) getValue(2);
	}

	/**
	 * Setter for <code>mysql.proc.specific_name</code>.
	 */
	public void setSpecificName(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>mysql.proc.specific_name</code>.
	 */
	public String getSpecificName() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>mysql.proc.language</code>.
	 */
	public void setLanguage(ProcLanguage value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>mysql.proc.language</code>.
	 */
	public ProcLanguage getLanguage() {
		return (ProcLanguage) getValue(4);
	}

	/**
	 * Setter for <code>mysql.proc.sql_data_access</code>.
	 */
	public void setSqlDataAccess(ProcSqlDataAccess value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>mysql.proc.sql_data_access</code>.
	 */
	public ProcSqlDataAccess getSqlDataAccess() {
		return (ProcSqlDataAccess) getValue(5);
	}

	/**
	 * Setter for <code>mysql.proc.is_deterministic</code>.
	 */
	public void setIsDeterministic(ProcIsDeterministic value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>mysql.proc.is_deterministic</code>.
	 */
	public ProcIsDeterministic getIsDeterministic() {
		return (ProcIsDeterministic) getValue(6);
	}

	/**
	 * Setter for <code>mysql.proc.security_type</code>.
	 */
	public void setSecurityType(ProcSecurityType value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>mysql.proc.security_type</code>.
	 */
	public ProcSecurityType getSecurityType() {
		return (ProcSecurityType) getValue(7);
	}

	/**
	 * Setter for <code>mysql.proc.param_list</code>.
	 */
	public void setParamList(byte[] value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>mysql.proc.param_list</code>.
	 */
	public byte[] getParamList() {
		return (byte[]) getValue(8);
	}

	/**
	 * Setter for <code>mysql.proc.returns</code>.
	 */
	public void setReturns(byte[] value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>mysql.proc.returns</code>.
	 */
	public byte[] getReturns() {
		return (byte[]) getValue(9);
	}

	/**
	 * Setter for <code>mysql.proc.body</code>.
	 */
	public void setBody(byte[] value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>mysql.proc.body</code>.
	 */
	public byte[] getBody() {
		return (byte[]) getValue(10);
	}

	/**
	 * Setter for <code>mysql.proc.definer</code>.
	 */
	public void setDefiner(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>mysql.proc.definer</code>.
	 */
	public String getDefiner() {
		return (String) getValue(11);
	}

	/**
	 * Setter for <code>mysql.proc.created</code>.
	 */
	public void setCreated(Timestamp value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>mysql.proc.created</code>.
	 */
	public Timestamp getCreated() {
		return (Timestamp) getValue(12);
	}

	/**
	 * Setter for <code>mysql.proc.modified</code>.
	 */
	public void setModified(Timestamp value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>mysql.proc.modified</code>.
	 */
	public Timestamp getModified() {
		return (Timestamp) getValue(13);
	}

	/**
	 * Setter for <code>mysql.proc.sql_mode</code>.
	 */
	public void setSqlMode(String value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>mysql.proc.sql_mode</code>.
	 */
	public String getSqlMode() {
		return (String) getValue(14);
	}

	/**
	 * Setter for <code>mysql.proc.comment</code>.
	 */
	public void setComment(String value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>mysql.proc.comment</code>.
	 */
	public String getComment() {
		return (String) getValue(15);
	}

	/**
	 * Setter for <code>mysql.proc.character_set_client</code>.
	 */
	public void setCharacterSetClient(String value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>mysql.proc.character_set_client</code>.
	 */
	public String getCharacterSetClient() {
		return (String) getValue(16);
	}

	/**
	 * Setter for <code>mysql.proc.collation_connection</code>.
	 */
	public void setCollationConnection(String value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>mysql.proc.collation_connection</code>.
	 */
	public String getCollationConnection() {
		return (String) getValue(17);
	}

	/**
	 * Setter for <code>mysql.proc.db_collation</code>.
	 */
	public void setDbCollation(String value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>mysql.proc.db_collation</code>.
	 */
	public String getDbCollation() {
		return (String) getValue(18);
	}

	/**
	 * Setter for <code>mysql.proc.body_utf8</code>.
	 */
	public void setBodyUtf8(byte[] value) {
		setValue(19, value);
	}

	/**
	 * Getter for <code>mysql.proc.body_utf8</code>.
	 */
	public byte[] getBodyUtf8() {
		return (byte[]) getValue(19);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record3<String, String, ProcType> key() {
		return (Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record20 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row20<String, String, ProcType, String, ProcLanguage, ProcSqlDataAccess, ProcIsDeterministic, ProcSecurityType, byte[], byte[], byte[], String, Timestamp, Timestamp, String, String, String, String, String, byte[]> fieldsRow() {
		return (Row20) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row20<String, String, ProcType, String, ProcLanguage, ProcSqlDataAccess, ProcIsDeterministic, ProcSecurityType, byte[], byte[], byte[], String, Timestamp, Timestamp, String, String, String, String, String, byte[]> valuesRow() {
		return (Row20) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Proc.PROC.DB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Proc.PROC.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ProcType> field3() {
		return Proc.PROC.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Proc.PROC.SPECIFIC_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ProcLanguage> field5() {
		return Proc.PROC.LANGUAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ProcSqlDataAccess> field6() {
		return Proc.PROC.SQL_DATA_ACCESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ProcIsDeterministic> field7() {
		return Proc.PROC.IS_DETERMINISTIC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ProcSecurityType> field8() {
		return Proc.PROC.SECURITY_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field9() {
		return Proc.PROC.PARAM_LIST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field10() {
		return Proc.PROC.RETURNS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field11() {
		return Proc.PROC.BODY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return Proc.PROC.DEFINER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field13() {
		return Proc.PROC.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field14() {
		return Proc.PROC.MODIFIED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field15() {
		return Proc.PROC.SQL_MODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field16() {
		return Proc.PROC.COMMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field17() {
		return Proc.PROC.CHARACTER_SET_CLIENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field18() {
		return Proc.PROC.COLLATION_CONNECTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field19() {
		return Proc.PROC.DB_COLLATION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field20() {
		return Proc.PROC.BODY_UTF8;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getDb();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcType value3() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getSpecificName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcLanguage value5() {
		return getLanguage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcSqlDataAccess value6() {
		return getSqlDataAccess();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcIsDeterministic value7() {
		return getIsDeterministic();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcSecurityType value8() {
		return getSecurityType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value9() {
		return getParamList();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value10() {
		return getReturns();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value11() {
		return getBody();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getDefiner();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value13() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value14() {
		return getModified();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value15() {
		return getSqlMode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value16() {
		return getComment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value17() {
		return getCharacterSetClient();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value18() {
		return getCollationConnection();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value19() {
		return getDbCollation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value20() {
		return getBodyUtf8();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value1(String value) {
		setDb(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value3(ProcType value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value4(String value) {
		setSpecificName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value5(ProcLanguage value) {
		setLanguage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value6(ProcSqlDataAccess value) {
		setSqlDataAccess(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value7(ProcIsDeterministic value) {
		setIsDeterministic(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value8(ProcSecurityType value) {
		setSecurityType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value9(byte[] value) {
		setParamList(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value10(byte[] value) {
		setReturns(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value11(byte[] value) {
		setBody(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value12(String value) {
		setDefiner(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value13(Timestamp value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value14(Timestamp value) {
		setModified(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value15(String value) {
		setSqlMode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value16(String value) {
		setComment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value17(String value) {
		setCharacterSetClient(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value18(String value) {
		setCollationConnection(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value19(String value) {
		setDbCollation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord value20(byte[] value) {
		setBodyUtf8(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProcRecord values(String value1, String value2, ProcType value3, String value4, ProcLanguage value5, ProcSqlDataAccess value6, ProcIsDeterministic value7, ProcSecurityType value8, byte[] value9, byte[] value10, byte[] value11, String value12, Timestamp value13, Timestamp value14, String value15, String value16, String value17, String value18, String value19, byte[] value20) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		value16(value16);
		value17(value17);
		value18(value18);
		value19(value19);
		value20(value20);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ProcRecord
	 */
	public ProcRecord() {
		super(Proc.PROC);
	}

	/**
	 * Create a detached, initialised ProcRecord
	 */
	public ProcRecord(String db, String name, ProcType type, String specificName, ProcLanguage language, ProcSqlDataAccess sqlDataAccess, ProcIsDeterministic isDeterministic, ProcSecurityType securityType, byte[] paramList, byte[] returns, byte[] body, String definer, Timestamp created, Timestamp modified, String sqlMode, String comment, String characterSetClient, String collationConnection, String dbCollation, byte[] bodyUtf8) {
		super(Proc.PROC);

		setValue(0, db);
		setValue(1, name);
		setValue(2, type);
		setValue(3, specificName);
		setValue(4, language);
		setValue(5, sqlDataAccess);
		setValue(6, isDeterministic);
		setValue(7, securityType);
		setValue(8, paramList);
		setValue(9, returns);
		setValue(10, body);
		setValue(11, definer);
		setValue(12, created);
		setValue(13, modified);
		setValue(14, sqlMode);
		setValue(15, comment);
		setValue(16, characterSetClient);
		setValue(17, collationConnection);
		setValue(18, dbCollation);
		setValue(19, bodyUtf8);
	}
}
