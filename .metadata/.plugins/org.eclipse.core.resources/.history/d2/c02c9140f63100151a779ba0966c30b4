/**
 * This class is generated by jOOQ
 */
package org.gradle.blogdb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.blogdb.Blogdb;
import org.gradle.blogdb.Keys;
import org.gradle.blogdb.tables.records.KategorijaRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Kategorija extends TableImpl<KategorijaRecord> {

	private static final long serialVersionUID = 1580263695;

	/**
	 * The reference instance of <code>blogdb.kategorija</code>
	 */
	public static final Kategorija KATEGORIJA = new Kategorija();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<KategorijaRecord> getRecordType() {
		return KategorijaRecord.class;
	}

	/**
	 * The column <code>blogdb.kategorija.idKategorija</code>.
	 */
	public final TableField<KategorijaRecord, Integer> IDKATEGORIJA = createField("idKategorija", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>blogdb.kategorija.naziv</code>.
	 */
	public final TableField<KategorijaRecord, String> NAZIV = createField("naziv", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>blogdb.kategorija</code> table reference
	 */
	public Kategorija() {
		this("kategorija", null);
	}

	/**
	 * Create an aliased <code>blogdb.kategorija</code> table reference
	 */
	public Kategorija(String alias) {
		this(alias, KATEGORIJA);
	}

	private Kategorija(String alias, Table<KategorijaRecord> aliased) {
		this(alias, aliased, null);
	}

	private Kategorija(String alias, Table<KategorijaRecord> aliased, Field<?>[] parameters) {
		super(alias, Blogdb.BLOGDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<KategorijaRecord, Integer> getIdentity() {
		return Keys.IDENTITY_KATEGORIJA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<KategorijaRecord> getPrimaryKey() {
		return Keys.KEY_KATEGORIJA_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<KategorijaRecord>> getKeys() {
		return Arrays.<UniqueKey<KategorijaRecord>>asList(Keys.KEY_KATEGORIJA_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Kategorija as(String alias) {
		return new Kategorija(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Kategorija rename(String name) {
		return new Kategorija(name, null);
	}
}
