/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.dnevnik.Dnevnik;
import org.gradle.dnevnik.Keys;
import org.gradle.dnevnik.tables.records.RoditeljRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Roditelj extends TableImpl<RoditeljRecord> {

	private static final long serialVersionUID = -1977317211;

	/**
	 * The reference instance of <code>dnevnik.roditelj</code>
	 */
	public static final Roditelj RODITELJ = new Roditelj();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RoditeljRecord> getRecordType() {
		return RoditeljRecord.class;
	}

	/**
	 * The column <code>dnevnik.roditelj.idRoditelja</code>.
	 */
	public final TableField<RoditeljRecord, Integer> IDRODITELJA = createField("idRoditelja", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.roditelj.userR</code>.
	 */
	public final TableField<RoditeljRecord, String> USERR = createField("userR", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.roditelj.passR</code>.
	 */
	public final TableField<RoditeljRecord, Integer> PASSR = createField("passR", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.roditelj.imeRoditelja</code>.
	 */
	public final TableField<RoditeljRecord, String> IMERODITELJA = createField("imeRoditelja", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.roditelj.prezimeRoditelja</code>.
	 */
	public final TableField<RoditeljRecord, String> PREZIMERODITELJA = createField("prezimeRoditelja", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>dnevnik.roditelj</code> table reference
	 */
	public Roditelj() {
		this("roditelj", null);
	}

	/**
	 * Create an aliased <code>dnevnik.roditelj</code> table reference
	 */
	public Roditelj(String alias) {
		this(alias, RODITELJ);
	}

	private Roditelj(String alias, Table<RoditeljRecord> aliased) {
		this(alias, aliased, null);
	}

	private Roditelj(String alias, Table<RoditeljRecord> aliased, Field<?>[] parameters) {
		super(alias, Dnevnik.DNEVNIK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RoditeljRecord, Integer> getIdentity() {
		return Keys.IDENTITY_RODITELJ;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RoditeljRecord> getPrimaryKey() {
		return Keys.KEY_RODITELJ_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RoditeljRecord>> getKeys() {
		return Arrays.<UniqueKey<RoditeljRecord>>asList(Keys.KEY_RODITELJ_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Roditelj as(String alias) {
		return new Roditelj(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Roditelj rename(String name) {
		return new Roditelj(name, null);
	}
}
