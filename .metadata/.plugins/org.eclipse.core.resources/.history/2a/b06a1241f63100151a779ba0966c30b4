/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables.records;


import javax.annotation.Generated;

import org.gradle.dnevnik.tables.Cas;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CasRecord extends UpdatableRecordImpl<CasRecord> implements Record4<Integer, String, Integer, String> {

	private static final long serialVersionUID = -765732262;

	/**
	 * Setter for <code>dnevnik.cas.idCasa</code>.
	 */
	public void setIdcasa(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dnevnik.cas.idCasa</code>.
	 */
	public Integer getIdcasa() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>dnevnik.cas.naslov</code>.
	 */
	public void setNaslov(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dnevnik.cas.naslov</code>.
	 */
	public String getNaslov() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>dnevnik.cas.brCasa</code>.
	 */
	public void setBrcasa(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dnevnik.cas.brCasa</code>.
	 */
	public Integer getBrcasa() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>dnevnik.cas.opis</code>.
	 */
	public void setOpis(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dnevnik.cas.opis</code>.
	 */
	public String getOpis() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Integer, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, Integer, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Cas.CAS.IDCASA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Cas.CAS.NASLOV;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Cas.CAS.BRCASA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Cas.CAS.OPIS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdcasa();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getNaslov();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getBrcasa();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getOpis();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CasRecord value1(Integer value) {
		setIdcasa(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CasRecord value2(String value) {
		setNaslov(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CasRecord value3(Integer value) {
		setBrcasa(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CasRecord value4(String value) {
		setOpis(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CasRecord values(Integer value1, String value2, Integer value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CasRecord
	 */
	public CasRecord() {
		super(Cas.CAS);
	}

	/**
	 * Create a detached, initialised CasRecord
	 */
	public CasRecord(Integer idcasa, String naslov, Integer brcasa, String opis) {
		super(Cas.CAS);

		setValue(0, idcasa);
		setValue(1, naslov);
		setValue(2, brcasa);
		setValue(3, opis);
	}
}
