/**
 * This class is generated by jOOQ
 */
package org.gradle.bioskopdb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.bioskopdb.Bioskopdb;
import org.gradle.bioskopdb.Keys;
import org.gradle.bioskopdb.tables.records.SalaRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sala extends TableImpl<SalaRecord> {

	private static final long serialVersionUID = -858118003;

	/**
	 * The reference instance of <code>bioskopdb.sala</code>
	 */
	public static final Sala SALA = new Sala();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SalaRecord> getRecordType() {
		return SalaRecord.class;
	}

	/**
	 * The column <code>bioskopdb.sala.idSala</code>.
	 */
	public final TableField<SalaRecord, Integer> IDSALA = createField("idSala", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>bioskopdb.sala.naziv</code>.
	 */
	public final TableField<SalaRecord, String> NAZIV = createField("naziv", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>bioskopdb.sala.brojMesta</code>.
	 */
	public final TableField<SalaRecord, Integer> BROJMESTA = createField("brojMesta", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>bioskopdb.sala.3d</code>.
	 */
	public final TableField<SalaRecord, Byte> _3D = createField("3d", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

	/**
	 * Create a <code>bioskopdb.sala</code> table reference
	 */
	public Sala() {
		this("sala", null);
	}

	/**
	 * Create an aliased <code>bioskopdb.sala</code> table reference
	 */
	public Sala(String alias) {
		this(alias, SALA);
	}

	private Sala(String alias, Table<SalaRecord> aliased) {
		this(alias, aliased, null);
	}

	private Sala(String alias, Table<SalaRecord> aliased, Field<?>[] parameters) {
		super(alias, Bioskopdb.BIOSKOPDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SalaRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SALA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SalaRecord> getPrimaryKey() {
		return Keys.KEY_SALA_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SalaRecord>> getKeys() {
		return Arrays.<UniqueKey<SalaRecord>>asList(Keys.KEY_SALA_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Sala as(String alias) {
		return new Sala(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Sala rename(String name) {
		return new Sala(name, null);
	}
}
