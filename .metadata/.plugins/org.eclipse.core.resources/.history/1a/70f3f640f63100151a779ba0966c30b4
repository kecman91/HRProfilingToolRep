/**
 * This class is generated by jOOQ
 */
package org.gradle.tim1.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.tim1.Keys;
import org.gradle.tim1.Tim1;
import org.gradle.tim1.tables.records.ArticleRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Article extends TableImpl<ArticleRecord> {

	private static final long serialVersionUID = 1226868666;

	/**
	 * The reference instance of <code>tim1.article</code>
	 */
	public static final Article ARTICLE = new Article();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ArticleRecord> getRecordType() {
		return ArticleRecord.class;
	}

	/**
	 * The column <code>tim1.article.idArticle</code>.
	 */
	public final TableField<ArticleRecord, Integer> IDARTICLE = createField("idArticle", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>tim1.article.name</code>.
	 */
	public final TableField<ArticleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>tim1.article.description</code>.
	 */
	public final TableField<ArticleRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>tim1.article.price</code>.
	 */
	public final TableField<ArticleRecord, Integer> PRICE = createField("price", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>tim1.article.pictureUrl</code>.
	 */
	public final TableField<ArticleRecord, String> PICTUREURL = createField("pictureUrl", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>tim1.article.numberOfPurchases</code>.
	 */
	public final TableField<ArticleRecord, Integer> NUMBEROFPURCHASES = createField("numberOfPurchases", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>tim1.article.idCategory</code>.
	 */
	public final TableField<ArticleRecord, Integer> IDCATEGORY = createField("idCategory", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>tim1.article</code> table reference
	 */
	public Article() {
		this("article", null);
	}

	/**
	 * Create an aliased <code>tim1.article</code> table reference
	 */
	public Article(String alias) {
		this(alias, ARTICLE);
	}

	private Article(String alias, Table<ArticleRecord> aliased) {
		this(alias, aliased, null);
	}

	private Article(String alias, Table<ArticleRecord> aliased, Field<?>[] parameters) {
		super(alias, Tim1.TIM1, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ArticleRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ARTICLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ArticleRecord> getPrimaryKey() {
		return Keys.KEY_ARTICLE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ArticleRecord>> getKeys() {
		return Arrays.<UniqueKey<ArticleRecord>>asList(Keys.KEY_ARTICLE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ArticleRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ArticleRecord, ?>>asList(Keys.ARTICLE_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Article as(String alias) {
		return new Article(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Article rename(String name) {
		return new Article(name, null);
	}
}
