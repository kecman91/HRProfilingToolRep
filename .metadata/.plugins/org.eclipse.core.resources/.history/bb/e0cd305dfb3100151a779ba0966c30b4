/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.gradle.dnevnik.tables.Izostanak;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IzostanakRecord extends UpdatableRecordImpl<IzostanakRecord> implements Record4<Integer, Byte, Date, Integer> {

	private static final long serialVersionUID = -2106423649;

	/**
	 * Setter for <code>dnevnik.izostanak.idIzostanka</code>.
	 */
	public void setIdizostanka(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dnevnik.izostanak.idIzostanka</code>.
	 */
	public Integer getIdizostanka() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>dnevnik.izostanak.opravdan</code>.
	 */
	public void setOpravdan(Byte value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dnevnik.izostanak.opravdan</code>.
	 */
	public Byte getOpravdan() {
		return (Byte) getValue(1);
	}

	/**
	 * Setter for <code>dnevnik.izostanak.datum</code>.
	 */
	public void setDatum(Date value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dnevnik.izostanak.datum</code>.
	 */
	public Date getDatum() {
		return (Date) getValue(2);
	}

	/**
	 * Setter for <code>dnevnik.izostanak.idCasa</code>.
	 */
	public void setIdcasa(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dnevnik.izostanak.idCasa</code>.
	 */
	public Integer getIdcasa() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Byte, Date, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Byte, Date, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Izostanak.IZOSTANAK.IDIZOSTANKA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field2() {
		return Izostanak.IZOSTANAK.OPRAVDAN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field3() {
		return Izostanak.IZOSTANAK.DATUM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Izostanak.IZOSTANAK.IDCASA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdizostanka();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value2() {
		return getOpravdan();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value3() {
		return getDatum();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getIdcasa();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzostanakRecord value1(Integer value) {
		setIdizostanka(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzostanakRecord value2(Byte value) {
		setOpravdan(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzostanakRecord value3(Date value) {
		setDatum(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzostanakRecord value4(Integer value) {
		setIdcasa(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IzostanakRecord values(Integer value1, Byte value2, Date value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached IzostanakRecord
	 */
	public IzostanakRecord() {
		super(Izostanak.IZOSTANAK);
	}

	/**
	 * Create a detached, initialised IzostanakRecord
	 */
	public IzostanakRecord(Integer idizostanka, Byte opravdan, Date datum, Integer idcasa) {
		super(Izostanak.IZOSTANAK);

		setValue(0, idizostanka);
		setValue(1, opravdan);
		setValue(2, datum);
		setValue(3, idcasa);
	}
}
