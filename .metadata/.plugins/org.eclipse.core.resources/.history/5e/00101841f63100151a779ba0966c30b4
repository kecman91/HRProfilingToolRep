/**
 * This class is generated by jOOQ
 */
package org.gradle.konkursidb.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.konkursidb.Keys;
import org.gradle.konkursidb.Konkursidb;
import org.gradle.konkursidb.tables.records.KonkursRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Konkurs extends TableImpl<KonkursRecord> {

	private static final long serialVersionUID = 358830264;

	/**
	 * The reference instance of <code>konkursidb.konkurs</code>
	 */
	public static final Konkurs KONKURS = new Konkurs();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<KonkursRecord> getRecordType() {
		return KonkursRecord.class;
	}

	/**
	 * The column <code>konkursidb.konkurs.idKonkurs</code>.
	 */
	public final TableField<KonkursRecord, Integer> IDKONKURS = createField("idKonkurs", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>konkursidb.konkurs.naziv</code>.
	 */
	public final TableField<KonkursRecord, String> NAZIV = createField("naziv", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>konkursidb.konkurs.potrebanProsek</code>.
	 */
	public final TableField<KonkursRecord, Double> POTREBANPROSEK = createField("potrebanProsek", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

	/**
	 * Create a <code>konkursidb.konkurs</code> table reference
	 */
	public Konkurs() {
		this("konkurs", null);
	}

	/**
	 * Create an aliased <code>konkursidb.konkurs</code> table reference
	 */
	public Konkurs(String alias) {
		this(alias, KONKURS);
	}

	private Konkurs(String alias, Table<KonkursRecord> aliased) {
		this(alias, aliased, null);
	}

	private Konkurs(String alias, Table<KonkursRecord> aliased, Field<?>[] parameters) {
		super(alias, Konkursidb.KONKURSIDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<KonkursRecord, Integer> getIdentity() {
		return Keys.IDENTITY_KONKURS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<KonkursRecord> getPrimaryKey() {
		return Keys.KEY_KONKURS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<KonkursRecord>> getKeys() {
		return Arrays.<UniqueKey<KonkursRecord>>asList(Keys.KEY_KONKURS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Konkurs as(String alias) {
		return new Konkurs(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Konkurs rename(String name) {
		return new Konkurs(name, null);
	}
}
