/**
 * This class is generated by jOOQ
 */
package org.gradle.tim1.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.gradle.tim1.tables.Order;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> implements Record4<Integer, Integer, Date, Integer> {

	private static final long serialVersionUID = 880048778;

	/**
	 * Setter for <code>tim1.order.idBasket</code>.
	 */
	public void setIdbasket(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>tim1.order.idBasket</code>.
	 */
	public Integer getIdbasket() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>tim1.order.idArticle</code>.
	 */
	public void setIdarticle(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>tim1.order.idArticle</code>.
	 */
	public Integer getIdarticle() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>tim1.order.date</code>.
	 */
	public void setDate(Date value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>tim1.order.date</code>.
	 */
	public Date getDate() {
		return (Date) getValue(2);
	}

	/**
	 * Setter for <code>tim1.order.idOrder</code>.
	 */
	public void setIdorder(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>tim1.order.idOrder</code>.
	 */
	public Integer getIdorder() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Date, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Date, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Order.ORDER.IDBASKET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Order.ORDER.IDARTICLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field3() {
		return Order.ORDER.DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Order.ORDER.IDORDER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdbasket();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getIdarticle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value3() {
		return getDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getIdorder();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderRecord value1(Integer value) {
		setIdbasket(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderRecord value2(Integer value) {
		setIdarticle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderRecord value3(Date value) {
		setDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderRecord value4(Integer value) {
		setIdorder(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OrderRecord values(Integer value1, Integer value2, Date value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached OrderRecord
	 */
	public OrderRecord() {
		super(Order.ORDER);
	}

	/**
	 * Create a detached, initialised OrderRecord
	 */
	public OrderRecord(Integer idbasket, Integer idarticle, Date date, Integer idorder) {
		super(Order.ORDER);

		setValue(0, idbasket);
		setValue(1, idarticle);
		setValue(2, date);
		setValue(3, idorder);
	}
}
