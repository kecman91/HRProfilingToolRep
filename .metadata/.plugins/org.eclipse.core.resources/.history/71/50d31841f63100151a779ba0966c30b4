/**
 * This class is generated by jOOQ
 */
package org.gradle.konkursidb.tables.records;


import javax.annotation.Generated;

import org.gradle.konkursidb.tables.Konkurs;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KonkursRecord extends UpdatableRecordImpl<KonkursRecord> implements Record3<Integer, String, Double> {

	private static final long serialVersionUID = 317095613;

	/**
	 * Setter for <code>konkursidb.konkurs.idKonkurs</code>.
	 */
	public void setIdkonkurs(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>konkursidb.konkurs.idKonkurs</code>.
	 */
	public Integer getIdkonkurs() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>konkursidb.konkurs.naziv</code>.
	 */
	public void setNaziv(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>konkursidb.konkurs.naziv</code>.
	 */
	public String getNaziv() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>konkursidb.konkurs.potrebanProsek</code>.
	 */
	public void setPotrebanprosek(Double value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>konkursidb.konkurs.potrebanProsek</code>.
	 */
	public Double getPotrebanprosek() {
		return (Double) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Double> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Double> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Konkurs.KONKURS.IDKONKURS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Konkurs.KONKURS.NAZIV;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field3() {
		return Konkurs.KONKURS.POTREBANPROSEK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdkonkurs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getNaziv();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value3() {
		return getPotrebanprosek();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public KonkursRecord value1(Integer value) {
		setIdkonkurs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public KonkursRecord value2(String value) {
		setNaziv(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public KonkursRecord value3(Double value) {
		setPotrebanprosek(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public KonkursRecord values(Integer value1, String value2, Double value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached KonkursRecord
	 */
	public KonkursRecord() {
		super(Konkurs.KONKURS);
	}

	/**
	 * Create a detached, initialised KonkursRecord
	 */
	public KonkursRecord(Integer idkonkurs, String naziv, Double potrebanprosek) {
		super(Konkurs.KONKURS);

		setValue(0, idkonkurs);
		setValue(1, naziv);
		setValue(2, potrebanprosek);
	}
}
