/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.dnevnik.Dnevnik;
import org.gradle.dnevnik.Keys;
import org.gradle.dnevnik.tables.records.CasRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cas extends TableImpl<CasRecord> {

	private static final long serialVersionUID = 1440136046;

	/**
	 * The reference instance of <code>dnevnik.cas</code>
	 */
	public static final Cas CAS = new Cas();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CasRecord> getRecordType() {
		return CasRecord.class;
	}

	/**
	 * The column <code>dnevnik.cas.idCasa</code>.
	 */
	public final TableField<CasRecord, Integer> IDCASA = createField("idCasa", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.cas.naslov</code>.
	 */
	public final TableField<CasRecord, String> NASLOV = createField("naslov", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.cas.brCasa</code>.
	 */
	public final TableField<CasRecord, Integer> BRCASA = createField("brCasa", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.cas.opis</code>.
	 */
	public final TableField<CasRecord, String> OPIS = createField("opis", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>dnevnik.cas</code> table reference
	 */
	public Cas() {
		this("cas", null);
	}

	/**
	 * Create an aliased <code>dnevnik.cas</code> table reference
	 */
	public Cas(String alias) {
		this(alias, CAS);
	}

	private Cas(String alias, Table<CasRecord> aliased) {
		this(alias, aliased, null);
	}

	private Cas(String alias, Table<CasRecord> aliased, Field<?>[] parameters) {
		super(alias, Dnevnik.DNEVNIK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<CasRecord, Integer> getIdentity() {
		return Keys.IDENTITY_CAS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CasRecord> getPrimaryKey() {
		return Keys.KEY_CAS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CasRecord>> getKeys() {
		return Arrays.<UniqueKey<CasRecord>>asList(Keys.KEY_CAS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Cas as(String alias) {
		return new Cas(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Cas rename(String name) {
		return new Cas(name, null);
	}
}
