/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables.records;


import javax.annotation.Generated;

import org.gradle.dnevnik.tables.Roditelj;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoditeljRecord extends UpdatableRecordImpl<RoditeljRecord> implements Record5<Integer, String, Integer, String, String> {

	private static final long serialVersionUID = -1608285262;

	/**
	 * Setter for <code>dnevnik.roditelj.idRoditelja</code>.
	 */
	public void setIdroditelja(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dnevnik.roditelj.idRoditelja</code>.
	 */
	public Integer getIdroditelja() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>dnevnik.roditelj.userR</code>.
	 */
	public void setUserr(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dnevnik.roditelj.userR</code>.
	 */
	public String getUserr() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>dnevnik.roditelj.passR</code>.
	 */
	public void setPassr(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dnevnik.roditelj.passR</code>.
	 */
	public Integer getPassr() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>dnevnik.roditelj.imeRoditelja</code>.
	 */
	public void setImeroditelja(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dnevnik.roditelj.imeRoditelja</code>.
	 */
	public String getImeroditelja() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>dnevnik.roditelj.prezimeRoditelja</code>.
	 */
	public void setPrezimeroditelja(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>dnevnik.roditelj.prezimeRoditelja</code>.
	 */
	public String getPrezimeroditelja() {
		return (String) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, Integer, String, String> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, Integer, String, String> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Roditelj.RODITELJ.IDRODITELJA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Roditelj.RODITELJ.USERR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Roditelj.RODITELJ.PASSR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Roditelj.RODITELJ.IMERODITELJA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Roditelj.RODITELJ.PREZIMERODITELJA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdroditelja();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserr();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getPassr();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getImeroditelja();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getPrezimeroditelja();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoditeljRecord value1(Integer value) {
		setIdroditelja(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoditeljRecord value2(String value) {
		setUserr(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoditeljRecord value3(Integer value) {
		setPassr(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoditeljRecord value4(String value) {
		setImeroditelja(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoditeljRecord value5(String value) {
		setPrezimeroditelja(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RoditeljRecord values(Integer value1, String value2, Integer value3, String value4, String value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RoditeljRecord
	 */
	public RoditeljRecord() {
		super(Roditelj.RODITELJ);
	}

	/**
	 * Create a detached, initialised RoditeljRecord
	 */
	public RoditeljRecord(Integer idroditelja, String userr, Integer passr, String imeroditelja, String prezimeroditelja) {
		super(Roditelj.RODITELJ);

		setValue(0, idroditelja);
		setValue(1, userr);
		setValue(2, passr);
		setValue(3, imeroditelja);
		setValue(4, prezimeroditelja);
	}
}
