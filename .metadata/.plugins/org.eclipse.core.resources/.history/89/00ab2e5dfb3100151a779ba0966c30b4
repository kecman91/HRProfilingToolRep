/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.dnevnik.Dnevnik;
import org.gradle.dnevnik.Keys;
import org.gradle.dnevnik.tables.records.PredmetRecord;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Predmet extends TableImpl<PredmetRecord> {

	private static final long serialVersionUID = -1304593385;

	/**
	 * The reference instance of <code>dnevnik.predmet</code>
	 */
	public static final Predmet PREDMET = new Predmet();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PredmetRecord> getRecordType() {
		return PredmetRecord.class;
	}

	/**
	 * The column <code>dnevnik.predmet.idPredmeta</code>.
	 */
	public final TableField<PredmetRecord, Integer> IDPREDMETA = createField("idPredmeta", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.predmet.naziv</code>.
	 */
	public final TableField<PredmetRecord, String> NAZIV = createField("naziv", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.predmet.fondCasova</code>.
	 */
	public final TableField<PredmetRecord, Integer> FONDCASOVA = createField("fondCasova", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.predmet.opis</code>.
	 */
	public final TableField<PredmetRecord, String> OPIS = createField("opis", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>dnevnik.predmet</code> table reference
	 */
	public Predmet() {
		this("predmet", null);
	}

	/**
	 * Create an aliased <code>dnevnik.predmet</code> table reference
	 */
	public Predmet(String alias) {
		this(alias, PREDMET);
	}

	private Predmet(String alias, Table<PredmetRecord> aliased) {
		this(alias, aliased, null);
	}

	private Predmet(String alias, Table<PredmetRecord> aliased, Field<?>[] parameters) {
		super(alias, Dnevnik.DNEVNIK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PredmetRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PREDMET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PredmetRecord> getPrimaryKey() {
		return Keys.KEY_PREDMET_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PredmetRecord>> getKeys() {
		return Arrays.<UniqueKey<PredmetRecord>>asList(Keys.KEY_PREDMET_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Predmet as(String alias) {
		return new Predmet(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Predmet rename(String name) {
		return new Predmet(name, null);
	}
}
