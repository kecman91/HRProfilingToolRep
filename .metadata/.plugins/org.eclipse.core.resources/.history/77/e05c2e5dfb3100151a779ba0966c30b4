/**
 * This class is generated by jOOQ
 */
package org.gradle.dnevnik.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.dnevnik.Dnevnik;
import org.gradle.dnevnik.Keys;
import org.gradle.dnevnik.tables.records.OcenaRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ocena extends TableImpl<OcenaRecord> {

	private static final long serialVersionUID = 625350230;

	/**
	 * The reference instance of <code>dnevnik.ocena</code>
	 */
	public static final Ocena OCENA = new Ocena();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OcenaRecord> getRecordType() {
		return OcenaRecord.class;
	}

	/**
	 * The column <code>dnevnik.ocena.idOcene</code>.
	 */
	public final TableField<OcenaRecord, Integer> IDOCENE = createField("idOcene", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ocena.idUcenika</code>.
	 */
	public final TableField<OcenaRecord, Integer> IDUCENIKA = createField("idUcenika", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ocena.idPredmeta</code>.
	 */
	public final TableField<OcenaRecord, Integer> IDPREDMETA = createField("idPredmeta", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ocena.tipOcene</code>.
	 */
	public final TableField<OcenaRecord, Integer> TIPOCENE = createField("tipOcene", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ocena.datumUnosa</code>.
	 */
	public final TableField<OcenaRecord, Date> DATUMUNOSA = createField("datumUnosa", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>dnevnik.ocena.opis</code>.
	 */
	public final TableField<OcenaRecord, String> OPIS = createField("opis", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>dnevnik.ocena</code> table reference
	 */
	public Ocena() {
		this("ocena", null);
	}

	/**
	 * Create an aliased <code>dnevnik.ocena</code> table reference
	 */
	public Ocena(String alias) {
		this(alias, OCENA);
	}

	private Ocena(String alias, Table<OcenaRecord> aliased) {
		this(alias, aliased, null);
	}

	private Ocena(String alias, Table<OcenaRecord> aliased, Field<?>[] parameters) {
		super(alias, Dnevnik.DNEVNIK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<OcenaRecord, Integer> getIdentity() {
		return Keys.IDENTITY_OCENA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OcenaRecord> getPrimaryKey() {
		return Keys.KEY_OCENA_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OcenaRecord>> getKeys() {
		return Arrays.<UniqueKey<OcenaRecord>>asList(Keys.KEY_OCENA_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OcenaRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OcenaRecord, ?>>asList(Keys.OCENA_IBFK_1, Keys.OCENA_IBFK_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Ocena as(String alias) {
		return new Ocena(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Ocena rename(String name) {
		return new Ocena(name, null);
	}
}
