/**
 * This class is generated by jOOQ
 */
package org.gradle.tim1.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.gradle.tim1.Keys;
import org.gradle.tim1.Tim1;
import org.gradle.tim1.tables.records.SubcategoryRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Subcategory extends TableImpl<SubcategoryRecord> {

	private static final long serialVersionUID = 1968283398;

	/**
	 * The reference instance of <code>tim1.subcategory</code>
	 */
	public static final Subcategory SUBCATEGORY = new Subcategory();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SubcategoryRecord> getRecordType() {
		return SubcategoryRecord.class;
	}

	/**
	 * The column <code>tim1.subcategory.idSubCategory</code>.
	 */
	public final TableField<SubcategoryRecord, Integer> IDSUBCATEGORY = createField("idSubCategory", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>tim1.subcategory.idCategory</code>.
	 */
	public final TableField<SubcategoryRecord, Integer> IDCATEGORY = createField("idCategory", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>tim1.subcategory.name</code>.
	 */
	public final TableField<SubcategoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>tim1.subcategory</code> table reference
	 */
	public Subcategory() {
		this("subcategory", null);
	}

	/**
	 * Create an aliased <code>tim1.subcategory</code> table reference
	 */
	public Subcategory(String alias) {
		this(alias, SUBCATEGORY);
	}

	private Subcategory(String alias, Table<SubcategoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private Subcategory(String alias, Table<SubcategoryRecord> aliased, Field<?>[] parameters) {
		super(alias, Tim1.TIM1, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SubcategoryRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SUBCATEGORY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SubcategoryRecord> getPrimaryKey() {
		return Keys.KEY_SUBCATEGORY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SubcategoryRecord>> getKeys() {
		return Arrays.<UniqueKey<SubcategoryRecord>>asList(Keys.KEY_SUBCATEGORY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<SubcategoryRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<SubcategoryRecord, ?>>asList(Keys.SUBCATEGORY_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Subcategory as(String alias) {
		return new Subcategory(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Subcategory rename(String name) {
		return new Subcategory(name, null);
	}
}
