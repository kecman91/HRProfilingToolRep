/**
 * This class is generated by jOOQ
 */
package org.gradle.tim1.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.gradle.tim1.tables.Comment;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record5<Integer, String, String, Timestamp, Integer> {

	private static final long serialVersionUID = 683523482;

	/**
	 * Setter for <code>tim1.comment.idComment</code>.
	 */
	public void setIdcomment(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>tim1.comment.idComment</code>.
	 */
	public Integer getIdcomment() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>tim1.comment.mail</code>.
	 */
	public void setMail(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>tim1.comment.mail</code>.
	 */
	public String getMail() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>tim1.comment.text</code>.
	 */
	public void setText(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>tim1.comment.text</code>.
	 */
	public String getText() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>tim1.comment.date</code>.
	 */
	public void setDate(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>tim1.comment.date</code>.
	 */
	public Timestamp getDate() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>tim1.comment.idArticle</code>.
	 */
	public void setIdarticle(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>tim1.comment.idArticle</code>.
	 */
	public Integer getIdarticle() {
		return (Integer) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String, Timestamp, Integer> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String, Timestamp, Integer> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Comment.COMMENT.IDCOMMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Comment.COMMENT.MAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Comment.COMMENT.TEXT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Comment.COMMENT.DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Comment.COMMENT.IDARTICLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdcomment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getMail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getText();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getIdarticle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value1(Integer value) {
		setIdcomment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value2(String value) {
		setMail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value3(String value) {
		setText(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value4(Timestamp value) {
		setDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord value5(Integer value) {
		setIdarticle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommentRecord values(Integer value1, String value2, String value3, Timestamp value4, Integer value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CommentRecord
	 */
	public CommentRecord() {
		super(Comment.COMMENT);
	}

	/**
	 * Create a detached, initialised CommentRecord
	 */
	public CommentRecord(Integer idcomment, String mail, String text, Timestamp date, Integer idarticle) {
		super(Comment.COMMENT);

		setValue(0, idcomment);
		setValue(1, mail);
		setValue(2, text);
		setValue(3, date);
		setValue(4, idarticle);
	}
}
