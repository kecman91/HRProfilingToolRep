/**
 * This class is generated by jOOQ
 */
package org.gradle.execom.tables.records;


import javax.annotation.Generated;

import org.gradle.execom.tables.Project;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record3<Integer, String, Integer> {

	private static final long serialVersionUID = 131935544;

	/**
	 * Setter for <code>execom.project.IDPROJECT</code>.
	 */
	public void setIdproject(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>execom.project.IDPROJECT</code>.
	 */
	public Integer getIdproject() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>execom.project.NAME_PROJECT</code>.
	 */
	public void setNameProject(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>execom.project.NAME_PROJECT</code>.
	 */
	public String getNameProject() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>execom.project.DURATION_OF_PROJECT</code>.
	 */
	public void setDurationOfProject(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>execom.project.DURATION_OF_PROJECT</code>.
	 */
	public Integer getDurationOfProject() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Project.PROJECT.IDPROJECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Project.PROJECT.NAME_PROJECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Project.PROJECT.DURATION_OF_PROJECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getIdproject();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getNameProject();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getDurationOfProject();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectRecord value1(Integer value) {
		setIdproject(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectRecord value2(String value) {
		setNameProject(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectRecord value3(Integer value) {
		setDurationOfProject(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProjectRecord values(Integer value1, String value2, Integer value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ProjectRecord
	 */
	public ProjectRecord() {
		super(Project.PROJECT);
	}

	/**
	 * Create a detached, initialised ProjectRecord
	 */
	public ProjectRecord(Integer idproject, String nameProject, Integer durationOfProject) {
		super(Project.PROJECT);

		setValue(0, idproject);
		setValue(1, nameProject);
		setValue(2, durationOfProject);
	}
}
