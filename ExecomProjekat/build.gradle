apply plugin: 'java'
apply plugin: 'eclipse'
repositories {
 	mavenLocal()
 	mavenCentral()
}

dependencies {
 	compile 'org.jooq:jooq:3.6.2'
 	runtime 'mysql:mysql-connector-java:5.1.36'

    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    compile group: 'org.springframework', name: 'spring-context', version: '4.1.7.RELEASE'

}


buildscript {
		 repositories {
		 mavenLocal()
		 mavenCentral()
	 }
	 dependencies {
		 classpath 'org.jooq:jooq-codegen:3.6.1'
		 classpath 'mysql:mysql-connector-java:5.1.36'

	 }
}

sourceCompatibility = 1.5
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}


test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task generate << {

    // Use your favourite XML builder to construct the code generation configuration file
    // ----------------------------------------------------------------------------------
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.6.0.xsd') {
        jdbc() {
            driver('com.mysql.jdbc.Driver')
            url('jdbc:mysql://localhost:3306/execom')
            user('root')
            password('')
        }
        generator() {
            database() {
            }
            generate() {
            }
            target() {
                packageName('org.gradle')
                directory('C:/Users/Smiley/Documents/GitHub/Execom/HRProfilingToolRep/ExecomProjekat')
            }
        }
    }

    // Run the code generator
    // ----------------------
    org.jooq.util.GenerationTool.main(
        javax.xml.bind.JAXB.unmarshal(
            new StringReader(writer.toString()),
            org.jooq.util.jaxb.Configuration.class
        )
    )
}


